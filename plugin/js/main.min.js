function O_ClusterIcon(e, t) {
  e.getMarkerClusterer().extend(O_ClusterIcon, google.maps.OverlayView),
    (this.cluster_ = e),
    (this.className_ = e.getMarkerClusterer().getClusterClass()),
    (this.styles_ = t),
    (this.center_ = null),
    (this.div_ = null),
    (this.sums_ = null),
    (this.visible_ = !1),
    this.setMap(e.getMap());
}
function O_Cluster(e) {
  (this.markerClusterer_ = e),
    (this.map_ = e.getMap()),
    (this.gridSize_ = e.getGridSize()),
    (this.minClusterSize_ = e.getMinimumClusterSize()),
    (this.averageCenter_ = e.getAverageCenter()),
    (this.markers_ = []),
    (this.stationsSum_ = 0),
    (this.center_ = null),
    (this.bounds_ = null),
    (this.clusterIcon_ = new O_ClusterIcon(this, e.getStyles()));
}
function O_MarkerClusterer(e, t, n) {
  this.extend(O_MarkerClusterer, google.maps.OverlayView),
    (t = t || []),
    (n = n || {}),
    (this.markers_ = []),
    (this.clusters_ = []),
    (this.listeners_ = []),
    (this.activeMap_ = null),
    (this.ready_ = !1),
    (this.gridSize_ = n.gridSize || 60),
    (this.minClusterSize_ = n.minimumClusterSize || 2),
    (this.maxZoom_ = n.maxZoom || null),
    (this.styles_ = n.styles || []),
    (this.title_ = n.title || ""),
    (this.zoomOnClick_ = !0),
    void 0 !== n.zoomOnClick && (this.zoomOnClick_ = n.zoomOnClick),
    (this.averageCenter_ = !1),
    void 0 !== n.averageCenter && (this.averageCenter_ = n.averageCenter),
    (this.ignoreHidden_ = !1),
    void 0 !== n.ignoreHidden && (this.ignoreHidden_ = n.ignoreHidden),
    (this.enableRetinaIcons_ = !1),
    void 0 !== n.enableRetinaIcons &&
      (this.enableRetinaIcons_ = n.enableRetinaIcons),
    (this.imagePath_ = n.imagePath || O_MarkerClusterer.IMAGE_PATH),
    (this.imageExtension_ =
      n.imageExtension || O_MarkerClusterer.IMAGE_EXTENSION),
    (this.imageSizes_ = n.imageSizes || O_MarkerClusterer.IMAGE_SIZES),
    (this.calculator_ = n.calculator || O_MarkerClusterer.CALCULATOR),
    (this.batchSize_ = n.batchSize || O_MarkerClusterer.BATCH_SIZE),
    (this.batchSizeIE_ = n.batchSizeIE || O_MarkerClusterer.BATCH_SIZE_IE),
    (this.clusterClass_ = n.clusterClass || "cluster"),
    -1 !== navigator.userAgent.toLowerCase().indexOf("msie") &&
      (this.batchSize_ = this.batchSizeIE_),
    this.setupStyles_(),
    this.addMarkers(t, !0),
    this.setMap(e);
}
var ORLEN = ORLEN || {};
ORLEN.loadFancyBox = function (e, t, n, o) {
  var i = n("html"),
    r = n(e),
    s = n(t),
    a = (n.orlenFancybox = function () {
      a.open.apply(this, arguments);
    }),
    l = navigator.userAgent.match(/msie/i),
    c = null,
    d = t.createTouch !== o,
    p = function (e) {
      return e && e.hasOwnProperty && e instanceof n;
    },
    u = function (e) {
      return e && "string" === n.type(e);
    },
    _ = function (e) {
      return u(e) && e.indexOf("%") > 0;
    },
    g = function (e) {
      return (
        e &&
        !(e.style.overflow && "hidden" === e.style.overflow) &&
        ((e.clientWidth && e.scrollWidth > e.clientWidth) ||
          (e.clientHeight && e.scrollHeight > e.clientHeight))
      );
    },
    h = function (e, t) {
      var n = parseInt(e, 10) || 0;
      return t && _(e) && (n = (a.getViewport()[t] / 100) * n), Math.ceil(n);
    },
    f = function (e, t) {
      return h(e, t) + "px";
    };
  n.extend(a, {
    version: "2.1.5",
    defaults: {
      padding: 15,
      margin: 20,
      width: 800,
      height: 600,
      minWidth: 100,
      minHeight: 100,
      maxWidth: 9999,
      maxHeight: 9999,
      pixelRatio: 1,
      autoSize: !0,
      autoHeight: !1,
      autoWidth: !1,
      autoResize: !0,
      autoCenter: !d,
      fitToView: !0,
      aspectRatio: !1,
      topRatio: 0.5,
      leftRatio: 0.5,
      scrolling: "auto",
      wrapCSS: "",
      arrows: !0,
      closeBtn: !0,
      closeClick: !1,
      nextClick: !1,
      mouseWheel: !0,
      autoPlay: !1,
      playSpeed: 3e3,
      preload: 3,
      modal: !1,
      loop: !0,
      ajax: { dataType: "html", headers: { "X-fancyBox": !0 } },
      iframe: { scrolling: "auto", preload: !0 },
      swf: {
        wmode: "transparent",
        allowfullscreen: "true",
        allowscriptaccess: "always",
      },
      keys: {
        next: { 13: "left", 34: "up", 39: "left", 40: "up" },
        prev: { 8: "right", 33: "down", 37: "right", 38: "down" },
        close: [27],
        play: [32],
        toggle: [70],
      },
      direction: { next: "left", prev: "right" },
      scrollOutside: !0,
      index: 0,
      type: null,
      href: null,
      content: null,
      title: null,
      tpl: {
        wrap: '<div class="orlen-fancybox-wrap" tabIndex="-1"><div class="orlen-fancybox-skin"><div class="orlen-fancybox-outer"><div class="orlen-fancybox-inner"></div></div></div></div>',
        image: '<img class="orlen-fancybox-image" src="{href}"  />',
        iframe:
          '<iframe id="orlen-fancybox-frame{rnd}" name="orlen-fancybox-frame{rnd}" class="orlen-fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen' +
          (l ? ' allowtransparency="true"' : "") +
          "></iframe>",
        error:
          '<p class="orlen-fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',
        closeBtn:
          '<a title="Close" class="orlen-fancybox-item orlen-fancybox-close" href="javascript:;"></a>',
        next: '<a title="Next" class="orlen-fancybox-nav orlen-fancybox-next" href="javascript:;"><span></span></a>',
        prev: '<a title="Previous" class="orlen-fancybox-nav orlen-fancybox-prev" href="javascript:;"><span></span></a>',
      },
      openEffect: "fade",
      openSpeed: 250,
      openEasing: "swing",
      openOpacity: !0,
      openMethod: "zoomIn",
      closeEffect: "fade",
      closeSpeed: 250,
      closeEasing: "swing",
      closeOpacity: !0,
      closeMethod: "zoomOut",
      nextEffect: "elastic",
      nextSpeed: 250,
      nextEasing: "swing",
      nextMethod: "changeIn",
      prevEffect: "elastic",
      prevSpeed: 250,
      prevEasing: "swing",
      prevMethod: "changeOut",
      helpers: { overlay: !0, title: !0 },
      onCancel: n.noop,
      beforeLoad: n.noop,
      afterLoad: n.noop,
      beforeShow: n.noop,
      afterShow: n.noop,
      beforeChange: n.noop,
      beforeClose: n.noop,
      afterClose: n.noop,
    },
    group: {},
    opts: {},
    previous: null,
    coming: null,
    current: null,
    isActive: !1,
    isOpen: !1,
    isOpened: !1,
    wrap: null,
    skin: null,
    outer: null,
    inner: null,
    player: { timer: null, isActive: !1 },
    ajaxLoad: null,
    imgPreload: null,
    transitions: {},
    helpers: {},
    open: function (e, t) {
      return e && (n.isPlainObject(t) || (t = {}), !1 !== a.close(!0))
        ? (n.isArray(e) || (e = p(e) ? n(e).get() : [e]),
          n.each(e, function (i, r) {
            var s,
              l,
              c,
              d,
              _,
              g,
              h,
              f = {};
            "object" === n.type(r) &&
              (r.nodeType && (r = n(r)),
              p(r)
                ? ((f = {
                    href: r.data("orlen-fancybox-href") || r.attr("href"),
                    title: r.data("orlen-fancybox-title") || r.attr("title"),
                    isDom: !0,
                    element: r,
                  }),
                  n.metadata && n.extend(!0, f, r.metadata()))
                : (f = r)),
              (s = t.href || f.href || (u(r) ? r : null)),
              (l = t.title !== o ? t.title : f.title || ""),
              (c = t.content || f.content),
              (d = c ? "html" : t.type || f.type),
              !d &&
                f.isDom &&
                ((d = r.data("orlen-fancybox-type")),
                d ||
                  ((_ = r.prop("class").match(/orlen-fancybox\.(\w+)/)),
                  (d = _ ? _[1] : null))),
              u(s) &&
                (d ||
                  (a.isImage(s)
                    ? (d = "image")
                    : a.isSWF(s)
                      ? (d = "swf")
                      : "#" === s.charAt(0)
                        ? (d = "inline")
                        : u(r) && ((d = "html"), (c = r))),
                "ajax" === d &&
                  ((g = s.split(/\s+/, 2)), (s = g.shift()), (h = g.shift()))),
              c ||
                ("inline" === d
                  ? s
                    ? (c = n(u(s) ? s.replace(/.*(?=#[^\s]+$)/, "") : s))
                    : f.isDom && (c = r)
                  : "html" === d
                    ? (c = s)
                    : d || s || !f.isDom || ((d = "inline"), (c = r))),
              n.extend(f, {
                href: s,
                type: d,
                content: c,
                title: l,
                selector: h,
              }),
              (e[i] = f);
          }),
          (a.opts = n.extend(!0, {}, a.defaults, t)),
          t.keys !== o &&
            (a.opts.keys = t.keys ? n.extend({}, a.defaults.keys, t.keys) : !1),
          (a.group = e),
          a._start(a.opts.index))
        : void 0;
    },
    cancel: function () {
      var e = a.coming;
      e &&
        !1 !== a.trigger("onCancel") &&
        (a.hideLoading(),
        a.ajaxLoad && a.ajaxLoad.abort(),
        (a.ajaxLoad = null),
        a.imgPreload && (a.imgPreload.onload = a.imgPreload.onerror = null),
        e.wrap && e.wrap.stop(!0, !0).trigger("onReset").remove(),
        (a.coming = null),
        a.current || a._afterZoomOut(e));
    },
    close: function (e) {
      a.cancel(),
        !1 !== a.trigger("beforeClose") &&
          (a.unbindEvents(),
          a.isActive &&
            (a.isOpen && e !== !0
              ? ((a.isOpen = a.isOpened = !1),
                (a.isClosing = !0),
                n(".orlen-fancybox-item, .orlen-fancybox-nav").remove(),
                a.wrap.stop(!0, !0).removeClass("orlen-fancybox-opened"),
                a.transitions[a.current.closeMethod]())
              : (n(".orlen-fancybox-wrap").stop(!0).trigger("onReset").remove(),
                a._afterZoomOut())));
    },
    play: function (e) {
      var t = function () {
          clearTimeout(a.player.timer);
        },
        n = function () {
          t(),
            a.current &&
              a.player.isActive &&
              (a.player.timer = setTimeout(a.next, a.current.playSpeed));
        },
        o = function () {
          t(),
            s.unbind(".player"),
            (a.player.isActive = !1),
            a.trigger("onPlayEnd");
        },
        i = function () {
          a.current &&
            (a.current.loop || a.current.index < a.group.length - 1) &&
            ((a.player.isActive = !0),
            s.bind({
              "onCancel.player beforeClose.player": o,
              "onUpdate.player": n,
              "beforeLoad.player": t,
            }),
            n(),
            a.trigger("onPlayStart"));
        };
      e === !0 || (!a.player.isActive && e !== !1) ? i() : o();
    },
    next: function (e) {
      var t = a.current;
      t && (u(e) || (e = t.direction.next), a.jumpto(t.index + 1, e, "next"));
    },
    prev: function (e) {
      var t = a.current;
      t && (u(e) || (e = t.direction.prev), a.jumpto(t.index - 1, e, "prev"));
    },
    jumpto: function (e, t, n) {
      var i = a.current;
      i &&
        ((e = h(e)),
        (a.direction = t || i.direction[e >= i.index ? "next" : "prev"]),
        (a.router = n || "jumpto"),
        i.loop &&
          (0 > e && (e = i.group.length + (e % i.group.length)),
          (e %= i.group.length)),
        i.group[e] !== o && (a.cancel(), a._start(e)));
    },
    reposition: function (e, t) {
      var o,
        i = a.current,
        r = i ? i.wrap : null;
      r &&
        ((o = a._getPosition(t)),
        e && "scroll" === e.type
          ? (delete o.position, r.stop(!0, !0).animate(o, 200))
          : (r.css(o), (i.pos = n.extend({}, i.dim, o))));
    },
    update: function (e) {
      var t = e && e.type,
        n = !t || "orientationchange" === t;
      n && (clearTimeout(c), (c = null)),
        a.isOpen &&
          !c &&
          (c = setTimeout(
            function () {
              var o = a.current;
              o &&
                !a.isClosing &&
                (a.wrap.removeClass("orlen-fancybox-tmp"),
                (n || "load" === t || ("resize" === t && o.autoResize)) &&
                  a._setDimension(),
                ("scroll" === t && o.canShrink) || a.reposition(e),
                a.trigger("onUpdate"),
                (c = null));
            },
            n && !d ? 0 : 300,
          ));
    },
    toggle: function (e) {
      a.isOpen &&
        ((a.current.fitToView =
          "boolean" === n.type(e) ? e : !a.current.fitToView),
        d &&
          (a.wrap.removeAttr("style").addClass("orlen-fancybox-tmp"),
          a.trigger("onUpdate")),
        a.update());
    },
    hideLoading: function () {
      s.unbind(".loading"), n("#orlen-fancybox-loading").remove();
    },
    showLoading: function () {
      var e, t;
      a.hideLoading(),
        (e = n('<div id="orlen-fancybox-loading"><div></div></div>')
          .click(a.cancel)
          .appendTo("body")),
        s.bind("keydown.loading", function (e) {
          27 === (e.which || e.keyCode) && (e.preventDefault(), a.cancel());
        }),
        a.defaults.fixed ||
          ((t = a.getViewport()),
          e.css({
            position: "absolute",
            top: 0.5 * t.h + t.y,
            left: 0.5 * t.w + t.x,
          }));
    },
    getViewport: function () {
      var t = (a.current && a.current.locked) || !1,
        n = { x: r.scrollLeft(), y: r.scrollTop() };
      return (
        t
          ? ((n.w = t[0].clientWidth), (n.h = t[0].clientHeight))
          : ((n.w = d && e.innerWidth ? e.innerWidth : r.width()),
            (n.h = d && e.innerHeight ? e.innerHeight : r.height())),
        n
      );
    },
    unbindEvents: function () {
      a.wrap && p(a.wrap) && a.wrap.unbind(".fb"),
        s.unbind(".fb"),
        r.unbind(".fb");
    },
    bindEvents: function () {
      var e,
        t = a.current;
      t &&
        (r.bind(
          "orientationchange.fb" +
            (d ? "" : " resize.fb") +
            (t.autoCenter && !t.locked ? " scroll.fb" : ""),
          a.update,
        ),
        (e = t.keys),
        e &&
          s.bind("keydown.fb", function (i) {
            var r = i.which || i.keyCode,
              s = i.target || i.srcElement;
            return 27 === r && a.coming
              ? !1
              : void (
                  i.ctrlKey ||
                  i.altKey ||
                  i.shiftKey ||
                  i.metaKey ||
                  (s && (s.type || n(s).is("[contenteditable]"))) ||
                  n.each(e, function (e, s) {
                    return t.group.length > 1 && s[r] !== o
                      ? (a[e](s[r]), i.preventDefault(), !1)
                      : n.inArray(r, s) > -1
                        ? (a[e](), i.preventDefault(), !1)
                        : void 0;
                  })
                );
          }),
        n.fn.mousewheel &&
          t.mouseWheel &&
          a.wrap.bind("mousewheel.fb", function (e, o, i, r) {
            for (
              var s = e.target || null, l = n(s), c = !1;
              l.length &&
              !(
                c ||
                l.is(".orlen-fancybox-skin") ||
                l.is(".orlen-fancybox-wrap")
              );

            )
              (c = g(l[0])), (l = n(l).parent());
            0 === o ||
              c ||
              (a.group.length > 1 &&
                !t.canShrink &&
                (r > 0 || i > 0
                  ? a.prev(r > 0 ? "down" : "left")
                  : (0 > r || 0 > i) && a.next(0 > r ? "up" : "right"),
                e.preventDefault()));
          }));
    },
    trigger: function (e, t) {
      var o,
        i = t || a.coming || a.current;
      if (i) {
        if (
          (n.isFunction(i[e]) &&
            (o = i[e].apply(i, Array.prototype.slice.call(arguments, 1))),
          o === !1)
        )
          return !1;
        i.helpers &&
          n.each(i.helpers, function (t, o) {
            o &&
              a.helpers[t] &&
              n.isFunction(a.helpers[t][e]) &&
              a.helpers[t][e](n.extend(!0, {}, a.helpers[t].defaults, o), i);
          }),
          s.trigger(e);
      }
    },
    isImage: function (e) {
      return (
        u(e) &&
        e.match(
          /(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i,
        )
      );
    },
    isSWF: function (e) {
      return u(e) && e.match(/\.(swf)((\?|#).*)?$/i);
    },
    _start: function (e) {
      var t,
        o,
        i,
        r,
        s,
        l = {};
      if (((e = h(e)), (t = a.group[e] || null), !t)) return !1;
      if (
        ((l = n.extend(!0, {}, a.opts, t)),
        (r = l.margin),
        (s = l.padding),
        "number" === n.type(r) && (l.margin = [r, r, r, r]),
        "number" === n.type(s) && (l.padding = [s, s, s, s]),
        l.modal &&
          n.extend(!0, l, {
            closeBtn: !1,
            closeClick: !1,
            nextClick: !1,
            arrows: !1,
            mouseWheel: !1,
            keys: null,
            helpers: { overlay: { closeClick: !1 } },
          }),
        l.autoSize && (l.autoWidth = l.autoHeight = !0),
        "auto" === l.width && (l.autoWidth = !0),
        "auto" === l.height && (l.autoHeight = !0),
        (l.group = a.group),
        (l.index = e),
        (a.coming = l),
        !1 === a.trigger("beforeLoad"))
      )
        return void (a.coming = null);
      if (((i = l.type), (o = l.href), !i))
        return (
          (a.coming = null),
          a.current && a.router && "jumpto" !== a.router
            ? ((a.current.index = e), a[a.router](a.direction))
            : !1
        );
      if (
        ((a.isActive = !0),
        ("image" === i || "swf" === i) &&
          ((l.autoHeight = l.autoWidth = !1), (l.scrolling = "visible")),
        "image" === i && (l.aspectRatio = !0),
        "iframe" === i && d && (l.scrolling = "scroll"),
        (l.wrap = n(l.tpl.wrap)
          .addClass(
            "orlen-fancybox-" +
              (d ? "mobile" : "desktop") +
              " orlen-fancybox-type-" +
              i +
              " orlen-fancybox-tmp " +
              l.wrapCSS,
          )
          .appendTo(l.parent || "body")),
        n.extend(l, {
          skin: n(".orlen-fancybox-skin", l.wrap),
          outer: n(".orlen-fancybox-outer", l.wrap),
          inner: n(".orlen-fancybox-inner", l.wrap),
        }),
        n.each(["Top", "Right", "Bottom", "Left"], function (e, t) {
          l.skin.css("padding" + t, f(l.padding[e]));
        }),
        a.trigger("onReady"),
        "inline" === i || "html" === i)
      ) {
        if (!l.content || !l.content.length) return a._error("content");
      } else if (!o) return a._error("href");
      "image" === i
        ? a._loadImage()
        : "ajax" === i
          ? a._loadAjax()
          : "iframe" === i
            ? a._loadIframe()
            : a._afterLoad();
    },
    _error: function (e) {
      n.extend(a.coming, {
        type: "html",
        autoWidth: !0,
        autoHeight: !0,
        minWidth: 0,
        minHeight: 0,
        scrolling: "no",
        hasError: e,
        content: a.coming.tpl.error,
      }),
        a._afterLoad();
    },
    _loadImage: function () {
      var e = (a.imgPreload = new Image());
      (e.onload = function () {
        (this.onload = this.onerror = null),
          (a.coming.width = this.width / a.opts.pixelRatio),
          (a.coming.height = this.height / a.opts.pixelRatio),
          a._afterLoad();
      }),
        (e.onerror = function () {
          (this.onload = this.onerror = null), a._error("image");
        }),
        (e.src = a.coming.href),
        e.complete !== !0 && a.showLoading();
    },
    _loadAjax: function () {
      var e = a.coming;
      a.showLoading(),
        (a.ajaxLoad = n.ajax(
          n.extend({}, e.ajax, {
            url: e.href,
            error: function (e, t) {
              a.coming && "abort" !== t ? a._error("ajax", e) : a.hideLoading();
            },
            success: function (t, n) {
              "success" === n && ((e.content = t), a._afterLoad());
            },
          }),
        ));
    },
    _loadIframe: function () {
      var e = a.coming,
        t = n(e.tpl.iframe.replace(/\{rnd\}/g, new Date().getTime()))
          .attr("scrolling", d ? "auto" : e.iframe.scrolling)
          .attr("src", e.href);
      n(e.wrap).bind("onReset", function () {
        try {
          n(this)
            .find("iframe")
            .hide()
            .attr("src", "//about:blank")
            .end()
            .empty();
        } catch (e) {}
      }),
        e.iframe.preload &&
          (a.showLoading(),
          t.one("load", function () {
            n(this).data("ready", 1),
              d || n(this).bind("load.fb", a.update),
              n(this)
                .parents(".orlen-fancybox-wrap")
                .width("100%")
                .removeClass("orlen-fancybox-tmp")
                .show(),
              a._afterLoad();
          })),
        (e.content = t.appendTo(e.inner)),
        e.iframe.preload || a._afterLoad();
    },
    _preloadImages: function () {
      var e,
        t,
        n = a.group,
        o = a.current,
        i = n.length,
        r = o.preload ? Math.min(o.preload, i - 1) : 0;
      for (t = 1; r >= t; t += 1)
        (e = n[(o.index + t) % i]),
          "image" === e.type && e.href && (new Image().src = e.href);
    },
    _afterLoad: function () {
      var e,
        t,
        o,
        i,
        r,
        s,
        l = a.coming,
        c = a.current,
        d = "orlen-fancybox-placeholder";
      if ((a.hideLoading(), l && a.isActive !== !1)) {
        if (!1 === a.trigger("afterLoad", l, c))
          return (
            l.wrap.stop(!0).trigger("onReset").remove(), void (a.coming = null)
          );
        switch (
          (c &&
            (a.trigger("beforeChange", c),
            c.wrap
              .stop(!0)
              .removeClass("orlen-fancybox-opened")
              .find(".orlen-fancybox-item, .orlen-fancybox-nav")
              .remove()),
          a.unbindEvents(),
          (e = l),
          (t = l.content),
          (o = l.type),
          (i = l.scrolling),
          n.extend(a, {
            wrap: e.wrap,
            skin: e.skin,
            outer: e.outer,
            inner: e.inner,
            current: e,
            previous: c,
          }),
          (r = e.href),
          o)
        ) {
          case "inline":
          case "ajax":
          case "html":
            e.selector
              ? (t = n("<div>").html(t).find(e.selector))
              : p(t) &&
                (t.data(d) ||
                  t.data(
                    d,
                    n('<div class="' + d + '"></div>')
                      .insertAfter(t)
                      .hide(),
                  ),
                (t = t.show().detach()),
                e.wrap.bind("onReset", function () {
                  n(this).find(t).length &&
                    t.hide().replaceAll(t.data(d)).data(d, !1);
                }));
            break;
          case "image":
            t = e.tpl.image.replace("{href}", r);
            break;
          case "swf":
            (t =
              '<object id="orlen-fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="' +
              r +
              '"></param>'),
              (s = ""),
              n.each(e.swf, function (e, n) {
                (t += '<param name="' + e + '" value="' + n + '"></param>'),
                  (s += " " + e + '="' + n + '"');
              }),
              (t +=
                '<embed src="' +
                r +
                '" type="application/x-shockwave-flash" width="100%" height="100%"' +
                s +
                "></embed></object>");
        }
        (p(t) && t.parent().is(e.inner)) || e.inner.append(t),
          a.trigger("beforeShow"),
          e.inner.css(
            "overflow",
            "yes" === i ? "scroll" : "no" === i ? "hidden" : i,
          ),
          a._setDimension(),
          a.reposition(),
          (a.isOpen = !1),
          (a.coming = null),
          a.bindEvents(),
          a.isOpened
            ? c.prevMethod && a.transitions[c.prevMethod]()
            : n(".orlen-fancybox-wrap")
                .not(e.wrap)
                .stop(!0)
                .trigger("onReset")
                .remove(),
          a.transitions[a.isOpened ? e.nextMethod : e.openMethod](),
          a._preloadImages();
      }
    },
    _setDimension: function () {
      var e,
        t,
        o,
        i,
        r,
        s,
        l,
        c,
        d,
        p,
        u,
        g,
        v,
        m,
        E,
        L = a.getViewport(),
        O = 0,
        R = !1,
        N = !1,
        y = a.wrap,
        w = a.skin,
        k = a.inner,
        b = a.current,
        S = b.width,
        C = b.height,
        x = b.minWidth,
        M = b.minHeight,
        I = b.maxWidth,
        $ = b.maxHeight,
        T = b.scrolling,
        A = b.scrollOutside ? b.scrollbarWidth : 0,
        P = b.margin,
        G = h(P[1] + P[3]),
        z = h(P[0] + P[2]);
      if (
        (y
          .add(w)
          .add(k)
          .width("auto")
          .height("auto")
          .removeClass("orlen-fancybox-tmp"),
        (e = h(w.outerWidth(!0) - w.width())),
        (t = h(w.outerHeight(!0) - w.height())),
        (o = G + e),
        (i = z + t),
        (r = _(S) ? ((L.w - o) * h(S)) / 100 : S),
        (s = _(C) ? ((L.h - i) * h(C)) / 100 : C),
        "iframe" === b.type)
      ) {
        if (((m = b.content), b.autoHeight && 1 === m.data("ready")))
          try {
            m[0].contentWindow.document.location &&
              (k.width(r).height(9999),
              (E = m.contents().find("body")),
              A && E.css("overflow-x", "hidden"),
              (s = E.outerHeight(!0)));
          } catch (F) {}
      } else
        (b.autoWidth || b.autoHeight) &&
          (k.addClass("orlen-fancybox-tmp"),
          b.autoWidth || k.width(r),
          b.autoHeight || k.height(s),
          b.autoWidth && (r = k.width()),
          b.autoHeight && (s = k.height()),
          k.removeClass("orlen-fancybox-tmp"));
      if (
        ((S = h(r)),
        (C = h(s)),
        (d = r / s),
        (x = h(_(x) ? h(x, "w") - o : x)),
        (I = h(_(I) ? h(I, "w") - o : I)),
        (M = h(_(M) ? h(M, "h") - i : M)),
        ($ = h(_($) ? h($, "h") - i : $)),
        (l = I),
        (c = $),
        b.fitToView && ((I = Math.min(L.w - o, I)), ($ = Math.min(L.h - i, $))),
        (g = L.w - G),
        (v = L.h - z),
        b.aspectRatio
          ? (S > I && ((S = I), (C = h(S / d))),
            C > $ && ((C = $), (S = h(C * d))),
            x > S && ((S = x), (C = h(S / d))),
            M > C && ((C = M), (S = h(C * d))))
          : ((S = Math.max(x, Math.min(S, I))),
            b.autoHeight &&
              "iframe" !== b.type &&
              (k.width(S), (C = k.height())),
            (C = Math.max(M, Math.min(C, $)))),
        b.fitToView)
      )
        if (
          (k.width(S).height(C),
          y.width(S + e),
          (p = y.width()),
          (u = y.height()),
          b.aspectRatio)
        )
          for (; (p > g || u > v) && S > x && C > M && !(O++ > 19); )
            (C = Math.max(M, Math.min($, C - 10))),
              (S = h(C * d)),
              x > S && ((S = x), (C = h(S / d))),
              S > I && ((S = I), (C = h(S / d))),
              k.width(S).height(C),
              y.width(S + e),
              (p = y.width()),
              (u = y.height());
        else
          (S = Math.max(x, Math.min(S, S - (p - g)))),
            (C = Math.max(M, Math.min(C, C - (u - v))));
      A && "auto" === T && s > C && g > S + e + A && (S += A),
        k.width(S).height(C),
        y.width(S + e),
        (p = y.width()),
        (u = y.height()),
        (R = (p > g || u > v) && S > x && C > M),
        (N = b.aspectRatio
          ? l > S && c > C && r > S && s > C
          : (l > S || c > C) && (r > S || s > C)),
        n.extend(b, {
          dim: { width: f(p), height: f(u) },
          origWidth: r,
          origHeight: s,
          canShrink: R,
          canExpand: N,
          wPadding: e,
          hPadding: t,
          wrapSpace: u - w.outerHeight(!0),
          skinSpace: w.height() - C,
        }),
        !m && b.autoHeight && C > M && $ > C && !N && k.height("auto");
    },
    _getPosition: function (e) {
      var t = a.current,
        n = a.getViewport(),
        o = t.margin,
        i = a.wrap.width() + o[1] + o[3],
        r = a.wrap.height() + o[0] + o[2],
        s = { position: "absolute", top: o[0], left: o[3] };
      return (
        t.autoCenter && t.fixed && !e && r <= n.h && i <= n.w
          ? (s.position = "fixed")
          : t.locked || ((s.top += n.y), (s.left += n.x)),
        (s.top = f(Math.max(s.top, s.top + (n.h - r) * t.topRatio))),
        (s.left = f(Math.max(s.left, s.left + (n.w - i) * t.leftRatio))),
        s
      );
    },
    _afterZoomIn: function () {
      var e = a.current;
      e &&
        ((a.isOpen = a.isOpened = !0),
        a.wrap.css("overflow", "visible").addClass("orlen-fancybox-opened"),
        a.update(),
        (e.closeClick || (e.nextClick && a.group.length > 1)) &&
          a.inner.css("cursor", "pointer").bind("click.fb", function (t) {
            n(t.target).is("a") ||
              n(t.target).parent().is("a") ||
              (t.preventDefault(), a[e.closeClick ? "close" : "next"]());
          }),
        e.closeBtn &&
          n(e.tpl.closeBtn)
            .appendTo(a.skin)
            .bind("click.fb", function (e) {
              e.preventDefault(), a.close();
            }),
        e.arrows &&
          a.group.length > 1 &&
          ((e.loop || e.index > 0) &&
            n(e.tpl.prev).appendTo(a.outer).bind("click.fb", a.prev),
          (e.loop || e.index < a.group.length - 1) &&
            n(e.tpl.next).appendTo(a.outer).bind("click.fb", a.next)),
        a.trigger("afterShow"),
        e.loop || e.index !== e.group.length - 1
          ? a.opts.autoPlay &&
            !a.player.isActive &&
            ((a.opts.autoPlay = !1), a.play())
          : a.play(!1));
    },
    _afterZoomOut: function (e) {
      (e = e || a.current),
        n(".orlen-fancybox-wrap").trigger("onReset").remove(),
        n.extend(a, {
          group: {},
          opts: {},
          router: !1,
          current: null,
          isActive: !1,
          isOpened: !1,
          isOpen: !1,
          isClosing: !1,
          wrap: null,
          skin: null,
          outer: null,
          inner: null,
        }),
        a.trigger("afterClose", e);
    },
  }),
    (a.transitions = {
      getOrigPosition: function () {
        var e = a.current,
          t = e.element,
          n = e.orig,
          o = {},
          i = 50,
          r = 50,
          s = e.hPadding,
          l = e.wPadding,
          c = a.getViewport();
        return (
          !n &&
            e.isDom &&
            t.is(":visible") &&
            ((n = t.find("img:first")), n.length || (n = t)),
          p(n)
            ? ((o = n.offset()),
              n.is("img") && ((i = n.outerWidth()), (r = n.outerHeight())))
            : ((o.top = c.y + (c.h - r) * e.topRatio),
              (o.left = c.x + (c.w - i) * e.leftRatio)),
          ("fixed" === a.wrap.css("position") || e.locked) &&
            ((o.top -= c.y), (o.left -= c.x)),
          (o = {
            top: f(o.top - s * e.topRatio),
            left: f(o.left - l * e.leftRatio),
            width: f(i + l),
            height: f(r + s),
          })
        );
      },
      step: function (e, t) {
        var n,
          o,
          i,
          r = t.prop,
          s = a.current,
          l = s.wrapSpace,
          c = s.skinSpace;
        ("width" === r || "height" === r) &&
          ((n = t.end === t.start ? 1 : (e - t.start) / (t.end - t.start)),
          a.isClosing && (n = 1 - n),
          (o = "width" === r ? s.wPadding : s.hPadding),
          (i = e - o),
          a.skin[r](h("width" === r ? i : i - l * n)),
          a.inner[r](h("width" === r ? i : i - l * n - c * n)));
      },
      zoomIn: function () {
        var e = a.current,
          t = e.pos,
          o = e.openEffect,
          i = "elastic" === o,
          r = n.extend({ opacity: 1 }, t);
        delete r.position,
          i
            ? ((t = this.getOrigPosition()), e.openOpacity && (t.opacity = 0.1))
            : "fade" === o && (t.opacity = 0.1),
          a.wrap.css(t).animate(r, {
            duration: "none" === o ? 0 : e.openSpeed,
            easing: e.openEasing,
            step: i ? this.step : null,
            complete: a._afterZoomIn,
          });
      },
      zoomOut: function () {
        var e = a.current,
          t = e.closeEffect,
          n = "elastic" === t,
          o = { opacity: 0.1 };
        n &&
          ((o = this.getOrigPosition()), e.closeOpacity && (o.opacity = 0.1)),
          a.wrap.animate(o, {
            duration: "none" === t ? 0 : e.closeSpeed,
            easing: e.closeEasing,
            step: n ? this.step : null,
            complete: a._afterZoomOut,
          });
      },
      changeIn: function () {
        var e,
          t = a.current,
          n = t.nextEffect,
          o = t.pos,
          i = { opacity: 1 },
          r = a.direction,
          s = 200;
        (o.opacity = 0.1),
          "elastic" === n &&
            ((e = "down" === r || "up" === r ? "top" : "left"),
            "down" === r || "right" === r
              ? ((o[e] = f(h(o[e]) - s)), (i[e] = "+=" + s + "px"))
              : ((o[e] = f(h(o[e]) + s)), (i[e] = "-=" + s + "px"))),
          "none" === n
            ? a._afterZoomIn()
            : a.wrap.css(o).animate(i, {
                duration: t.nextSpeed,
                easing: t.nextEasing,
                complete: a._afterZoomIn,
              });
      },
      changeOut: function () {
        var e = a.previous,
          t = e.prevEffect,
          o = { opacity: 0.1 },
          i = a.direction,
          r = 200;
        "elastic" === t &&
          (o["down" === i || "up" === i ? "top" : "left"] =
            ("up" === i || "left" === i ? "-" : "+") + "=" + r + "px"),
          e.wrap.animate(o, {
            duration: "none" === t ? 0 : e.prevSpeed,
            easing: e.prevEasing,
            complete: function () {
              n(this).trigger("onReset").remove();
            },
          });
      },
    }),
    (a.helpers.overlay = {
      defaults: {
        closeClick: !0,
        speedOut: 200,
        showEarly: !0,
        css: {},
        locked: !d,
        fixed: !0,
      },
      overlay: null,
      fixed: !1,
      el: n("html"),
      create: function (e) {
        (e = n.extend({}, this.defaults, e)),
          this.overlay && this.close(),
          (this.overlay = n(
            '<div class="orlen-fancybox-overlay"></div>',
          ).appendTo(a.coming ? a.coming.parent : e.parent)),
          (this.fixed = !1),
          e.fixed &&
            a.defaults.fixed &&
            (this.overlay.addClass("orlen-fancybox-overlay-fixed"),
            (this.fixed = !0));
      },
      open: function (e) {
        var t = this;
        (e = n.extend({}, this.defaults, e)),
          this.overlay
            ? this.overlay.unbind(".overlay").width("auto").height("auto")
            : this.create(e),
          this.fixed ||
            (r.bind("resize.overlay", n.proxy(this.update, this)),
            this.update()),
          e.closeClick &&
            this.overlay.bind("click.overlay", function (e) {
              return n(e.target).hasClass("orlen-fancybox-overlay")
                ? (a.isActive ? a.close() : t.close(), !1)
                : void 0;
            }),
          this.overlay.css(e.css).show();
      },
      close: function () {
        var e, t;
        r.unbind("resize.overlay"),
          this.el.hasClass("orlen-fancybox-lock") &&
            (n(".orlen-fancybox-margin").removeClass("orlen-fancybox-margin"),
            (e = r.scrollTop()),
            (t = r.scrollLeft()),
            this.el.removeClass("orlen-fancybox-lock"),
            r.scrollTop(e).scrollLeft(t)),
          n(".orlen-fancybox-overlay").remove().hide(),
          n.extend(this, { overlay: null, fixed: !1 });
      },
      update: function () {
        var e,
          n = "100%";
        this.overlay.width(n).height("100%"),
          l
            ? ((e = Math.max(
                t.documentElement.offsetWidth,
                t.body.offsetWidth,
              )),
              s.width() > e && (n = s.width()))
            : s.width() > r.width() && (n = s.width()),
          this.overlay.width(n).height(s.height());
      },
      onReady: function (e, t) {
        var o = this.overlay;
        n(".orlen-fancybox-overlay").stop(!0, !0),
          o || this.create(e),
          e.locked &&
            this.fixed &&
            t.fixed &&
            (o ||
              (this.margin =
                s.height() > r.height()
                  ? n("html").css("margin-right").replace("px", "")
                  : !1),
            (t.locked = this.overlay.append(t.wrap)),
            (t.fixed = !1)),
          e.showEarly === !0 && this.beforeShow.apply(this, arguments);
      },
      beforeShow: function (e, t) {
        var o, i;
        t.locked &&
          (this.margin !== !1 &&
            (n("*")
              .filter(function () {
                return (
                  "fixed" === n(this).css("position") &&
                  !n(this).hasClass("orlen-fancybox-overlay") &&
                  !n(this).hasClass("orlen-fancybox-wrap")
                );
              })
              .addClass("orlen-fancybox-margin"),
            this.el.addClass("orlen-fancybox-margin")),
          (o = r.scrollTop()),
          (i = r.scrollLeft()),
          this.el.addClass("orlen-fancybox-lock"),
          r.scrollTop(o).scrollLeft(i)),
          this.open(e);
      },
      onUpdate: function () {
        this.fixed || this.update();
      },
      afterClose: function (e) {
        this.overlay &&
          !a.coming &&
          this.overlay.fadeOut(e.speedOut, n.proxy(this.close, this));
      },
    }),
    (a.helpers.title = {
      defaults: { type: "float", position: "bottom" },
      beforeShow: function (e) {
        var t,
          o,
          i = a.current,
          r = i.title,
          s = e.type;
        if (
          (n.isFunction(r) && (r = r.call(i.element, i)),
          u(r) && "" !== n.trim(r))
        ) {
          switch (
            ((t = n(
              '<div class="orlen-fancybox-title orlen-fancybox-title-' +
                s +
                '-wrap">' +
                r +
                "</div>",
            )),
            s)
          ) {
            case "inside":
              o = a.skin;
              break;
            case "outside":
              o = a.wrap;
              break;
            case "over":
              o = a.inner;
              break;
            default:
              (o = a.skin),
                t.appendTo("body"),
                l && t.width(t.width()),
                t.wrapInner('<span class="child"></span>'),
                (a.current.margin[2] += Math.abs(h(t.css("margin-bottom"))));
          }
          t["top" === e.position ? "prependTo" : "appendTo"](o);
        }
      },
    }),
    (n.fn.orlenFancybox = function (e) {
      var t,
        o = n(this),
        i = this.selector || "",
        r = function (r) {
          var s,
            l,
            c = n(this).blur(),
            d = t;
          r.ctrlKey ||
            r.altKey ||
            r.shiftKey ||
            r.metaKey ||
            c.is(".orlen-fancybox-wrap") ||
            ((s = e.groupAttr || "data-orlen-fancybox-group"),
            (l = c.attr(s)),
            l || ((s = "rel"), (l = c.get(0)[s])),
            l &&
              "" !== l &&
              "nofollow" !== l &&
              ((c = i.length ? n(i) : o),
              (c = c.filter("[" + s + '="' + l + '"]')),
              (d = c.index(this))),
            (e.index = d),
            a.open(c, e) !== !1 && r.preventDefault());
        };
      return (
        (e = e || {}),
        (t = e.index || 0),
        i && e.live !== !1
          ? s
              .undelegate(i, "click.fb-start")
              .delegate(
                i + ":not('.orlen-fancybox-item, .orlen-fancybox-nav')",
                "click.fb-start",
                r,
              )
          : o.unbind("click.fb-start").bind("click.fb-start", r),
        this.filter("[data-orlen-fancybox-start=1]").trigger("click"),
        this
      );
    }),
    s.ready(function () {
      var t, r;
      n.scrollbarWidth === o &&
        (n.scrollbarWidth = function () {
          var e = n(
              '<div style="width:50px;height:50px;overflow:auto"><div/></div>',
            ).appendTo("body"),
            t = e.children(),
            o = t.innerWidth() - t.height(99).innerWidth();
          return e.remove(), o;
        }),
        n.support.fixedPosition === o &&
          (n.support.fixedPosition = (function () {
            var e = n('<div style="position:fixed;top:20px;"></div>').appendTo(
                "body",
              ),
              t = 20 === e[0].offsetTop || 15 === e[0].offsetTop;
            return e.remove(), t;
          })()),
        n.extend(a.defaults, {
          scrollbarWidth: n.scrollbarWidth(),
          fixed: n.support.fixedPosition,
          parent: n("body"),
        }),
        (t = n(e).width()),
        i.addClass("orlen-fancybox-lock-test"),
        (r = n(e).width()),
        i.removeClass("orlen-fancybox-lock-test"),
        n(
          "<style type='text/css'>.orlen-fancybox-margin{margin-right:" +
            (r - t) +
            "px;}</style>",
        ).appendTo("head");
    });
};
var ORLEN = ORLEN || {};
(ORLEN.settings = {
  id: "orlen_plugin",
  debug: !1,
  languageCode: "PL",
  key: "",
  width: 700,
  afterInit: null,
  clickMarkerCallback: null,
  customCssFile: "",
  customization: {
    mainColor: "",
    secondaryColor: "",
    textColor: "",
    fontFamily: "",
    mainBackground: "",
    secondBackground: "",
  },
  showAjaxLoader: !0,
  showResultsList: !0,
  showGenericLink: !0,
  showFilters: !0,
  isLocal: !1,
  showTabs: !0,
  sendFullData: !1,
  filters: [],
  network: [],
  query: {},
  infowindow:
    '<div class="infowindow"><img src="{0}" alt="logo" /><br>{1}<br><strong>{2}</strong><br>{3}<br><br>{4}<br><br><div style="text-align: right">{5}{6}</div></div>',
  showStationsOnInit: !1,
  showStationsCounter: !1,
  dragAndDropGMap: !1,
  newLook: !1,
  newLookRedesign: !1,
  hideUnavailableServices: !1,
  overrideResultImage: [],
  template: "",
  isFindRoutePath: !1,
  isFindPetrolPath: !1,
}),
  (ORLEN.vars = {
    $maxWaypoints: 5,
    $maxLocations: 100,
    $jQueryURL:
      "https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js",
    $webserviceURL: "https://wsp.orlen-energy.org/plugin/GasStations.svc",
    $imagesURL: "https://wsp.orlen-energy.org/plugin/_img/",
    $mainCssFile: "https://wsp.orlen-energy.org/plugin/css/main.css",
    $gMapURL: "https://maps.googleapis.com/maps/api/js",
    $choosePlaceIconSrc:
      "https://maps.gstatic.com/intl/pl_pl/mapfiles/icon_yellow{0}.png",
    $sessionid: null,
    $googleKey: null,
    $network: [],
    $filters: [],
    $filtersEnabled: [],
    $filterGroups: ["cards", "food", "services", "facilities", "gas"],
    $filterGroupsNew: ["cards", "services", "facilities", "gas", "food"],
    $mainFilters: [],
    $howManyPolylinePerRequest: 20,
    $template: "OrlenTemplates",
    $defaultLanguage: "PL",
    $defaultLocalization: [52.13, 19.5],
    $polyline: [],
    waypointsTable: [],
    waypointsIndex: 0,
    currentInfoWindow: null,
    currentMarker: null,
    markersToChoose: [],
    gpsPos: null,
    gpsMarker: null,
    directionMatrixDistance: [],
    alphabet: [
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h",
      "i",
      "j",
      "k",
      "l",
      "m",
      "n",
      "o",
      "p",
      "q",
      "r",
      "s",
      "t",
      "u",
      "v",
      "w",
      "x",
      "y",
      "z",
    ],
    $htmlTemplate:
      '<div id="_orlen_petrol_search_p">    <div id="_orlen_tabs_nav">        <a href="_orlen_petrol_find" id="_orlen_petrol_tab_find" class="_orlen_active petrol_find">Znajdź stację</a>        <a href="_orlen_route_find" id="_orlen_petrol_tab_route" class="route_find">Planuj trasę</a>    </div>    <div id="_orlen_petrol_cont">        <div id="_orlen_petrol_find">            <h4>Znajdź stację</h4>            <div class="form__field">                <input type="text" name="_orlen_petrol_search_input" id="_orlen_petrol_search_input" placeholder="Szukaj w pobliżu"/>            </div>            <a href="" class="_orlen_petrol_toggle_link _orlen_petrol_link">Wybierz opcje</a>            <div class="_orlen_petrol__search-distance">                <div class="checkbox">                    <input type="checkbox" id="chbox-distance" />                     <label for="chbox-distance">Szukaj w promieniu</label>                 </div>                <select>                    <option>1 km</option>                    <option>2 km</option>                    <option>5 km</option>                    <option>10 km</option>                    <option>20 km</option>                </select>            </div>            <div id="_orlen_petrol_find_buttons">                <a href="" id="_orlen_petrol_search_button" class="_orlen_petrol_button btn btn--red">szukaj</a>                <a href="" id="_orlen_petrol_geosearch_button" class="_orlen_petrol_button btn--link">stacje w pobliżu</a>            </div>        </div>        <div class="_route_find" id="_orlen_route_find">            <h4>Planuj trasę</h4>            <p id="_orlen_petrol_option_flex">                <a href="" id="_orlen_petrol_option_btn">Orlen Charge</a>                <a href="" id="_orlen_petrol_option_btn">Stop Cafe</a>                <a href="" id="_orlen_petrol_option_btn">Orlen w ruchu</a>                <a href="" id="_orlen_petrol_option_btn">O! Shop</a>                <a href="" id="_orlen_petrol_option_btn">Paczka</a>            </p>            <a href="" class="_orlen_petrol_toggle_link _orlen_petrol_link">Wybierz opcje</a>            <div class="_orlen_way">                <div class="" id="">                    <i class="circle">A</i>                    <input type="text" name="_orlen_petrol_route_from_input" id="_orlen_petrol_route_from_input" placeholder="Początek trasy"/>                </div>                <div id="_orlen_petrol_route_points">                    <div class="add--field">                        <input type="text" name="_orlen_petrol_route_point_input[]" placeholder="Przez"/>                        <a href="" class="_orlen_petrol_link">usuń</a>                    </div>                </div>                <div class="">                    <i class="circle">B</i>                    <input type="text" name="_orlen_petrol_route_to_input" id="_orlen_petrol_route_to_input" placeholder="Miejsce docelowe"/>                </div>            </div>            <div>                <a href="" id="_orlen_petrol__add_route_point" class="_orlen_link_add">                    <i class="circle">+</i>Dodaj nowy cel podróży                </a>            </div>            <a href="" id="_orlen_petrol_route_search_button" class="_orlen_petrol_button btn btn--red">Szukaj&#160;stację</a>        </div>        <div class="_orlen_petrol_error">Brak wyników wyszukiwania!</div>    </div>    <div class="_orlen_options">        <div class="_orlen__actions">            <a href="" class="_orlen_petrol_toggle_link _orlen_petrol_link">                <i class="icon icon--arrow-back"></i> powrót            </a>            <button class="btn btn--red || js-saveFilters">zastosuj</button>        </div>        <div class="custom-scroll">            <div id="_orlen_promoted_filters"></div>            <div id="_orlen_filters"></div>            <div id="_orlen_petrol_stations">                <span class="_orlen_petrol_title">Sieć</span>            </div>        </div>    </div>    <div id="_orlen_petrol_map">        <div id="_orlen_petrol_map_canvas"></div>    </div>    <div id="_orlen_input">        <span class="_orlen_petrol_title">Link</span>        <input id="_orlen_petrol_search_link_input" type="text"/>    </div>    <div id="_orlen_response" class="custom-scroll"></div>    <div id="_orlen_response_way">        <div class="_orlen__actions">            <a href="" class="_orlen_petrol_toggle_link _orlen_petrol_link">                <i class="icon icon--arrow-back"></i> powrót            </a>        </div>        <div class="custom-scroll" id="_orlen_response_way__content">        </div>    </div>    <div class="_orlen_details"></div></div>',
  }),
  (ORLEN.message = (function () {
    function e(e) {
      var t;
      return (
        (t =
          ORLEN.settings.languageCode in o
            ? o[ORLEN.settings.languageCode]
            : o[ORLEN.vars.$defaultLanguage]),
        e in t ? t[e] : (ORLEN.debug("Cannot find message " + e), "")
      );
    }
    function t(t) {
      $("._orlen_petrol_error").show().html(e(t));
    }
    function n() {
      $("._orlen_petrol_error").hide().html("");
    }
    var o = {
      PL: {
        MESSAGE_SELECT_WAYPOINT:
          'Została wybrana niejednoznaczna lokalizacja. Wybierz pozycję z listy powyżej lub zaznacz odpowiedni punkt na mapie, zatwierdź wybór klikając "wybierz".',
        MESSAGE_ROUTE_NOT_FOUND: "Trasa nie została znaleziona.",
        MESSAGE_LOCALIZATION_NOT_FOUND: "Lokalizacja nie została znaleziona.",
        MESSAGE_SELECT_LOCALIZATION: "wybierz lokalizację...",
        MESSAGE_SELECT_BUTTON: "wybierz",
        MESSAGE_WAIT: "Czekaj...",
        MESSAGE_STATION_NUMBER: "Stacja nr",
        MESSAGE_STATION_STREET: "ul.",
        MESSAGE_MORE: "Więcej",
        MESSAGE_MORE__NEW: "Szczegóły",
        MESSAGE_CHOOSE: "Wybierz",
        MESSAGE_OPEN: "Otwarta",
        MESSAGE_OPEN__24: "Czynne 24h",
        MESSAGE_OPTIONS__REDESIGN: "Pozostałe opcje",
        MESSAGE_OPTIONS_TITLE__REDESIGN: "Pozostałe opcje",
        MESSAGE_INPUT_SEARCH__REDESIGN: "Szukaj w pobliżu",
        MESSAGE_STATION_NOT_FOUND: "Brak wyników wyszukiwania!",
        STATION_TEMPLATE__REDESIGN:
          '<div class="oneResult__link show_on_the_map_{0}" data-localid="{8}"><div class="oneResult"><div class="oneResult__img img"><img src="{5}" alt="{7}"/></div><div class="oneResult__info info"><strong>Stacja nr: {6}</strong><div class="oneResult__info-details">ul. {1}<br />{2} {9}</div></div><div class="oneResult__additional-info"><div class="oneResult__distance distance">{4}</div><a href="{10}" class="oneResult__route _orlen_petrol_link" target="_blank">Dojazd</a></div></div></div>',
        STATION_TEMPLATE__NEW:
          '<div class="oneResult"><div class="img"><img src="{5}" alt="{7}"/></div><div class="info"><strong>Stacja nr: {6}</strong><br/>ul. {1}<br />{2}<br/><span class="text--gray">GPS: {3}</span><br /><a href="" id="show_on_the_map_{0}" class="_orlen_petrol_link">Pokaż na mapie</a><div class="distance">{4}</div></div></div>',
        STATION_TEMPLATE:
          '<div class="oneResult"><div class="img"><img src="{4}" alt="logo"/></div><div class="info"><strong>Stacja nr: {5}</strong><br/>ul. {1}, <span class="gps-info-wrap">GPS: {2}</span><br />Odległość: {3}<br /><a href="" id="show_on_the_map_{0}" class="_orlen_petrol_link">Pokaż na mapie</a></div></div>',
        STATION_FULL_INFO:
          '<div class="orlen-layer">                <div class="content">                    <div class="photo"><img src="{1}" /></div>                    <div class="description" style="min-height: 260px;">                        <div style="float:right; width: 240px; height: 240px;" id="divMap">                            <img src="https://maps.googleapis.com/maps/api/staticmap?center={8},{9}&zoom=13&size=240x240&maptype=roadmap&markers=color:red%7Clabel:C%7C{8},{9}&sensor=false{15}" />                        </div>                        <strong>Stacja Numer: {0} </strong><br />                        <strong>Sieć: {2} </strong><br /><br />                        {3}, {4} {5}, {6}<br />                        tel.: {7}<br />                        Otwarta: {16}                        <br /><br />                        <strong>Współrzędne:</strong><br />                        Szerokość   {8}<br />                        Długość {9}                    </div>                    <div style="clear: both"></div>                    <div class="content02">                        <ul class="list01 w170px">                            <li><h4>Paliwa</h4></li>                            {10}                        </ul>                        <ul class="list01 w240px">                            <li><h4>Udogodnienia</h4></li>                            {11}                        </ul>                        <ul class="list01 w190px">                            <li><h4>Usługi</h4></li>                            {12}                        </ul>                        <ul class="list01 w170px">                            <li><h4>Gastronomia</h4></li>                            {13}                        </ul>                        <ul class="list01 w170px">                            <li><h4>Karty</h4></li>                            {14}                        </ul>                    </div>                    <div style="clear: both"></div>                </div>            </div>',
        STATION_FULL_INFO__NEW:
          '<div class="_orlen__actions">                <a href="#" class="_orlen_petrol_link close__details">                    <i class="icon icon--arrow-back"></i>                     wróć do wyników                </a>            </div>            <div class="custom-scroll">                <div class="content">                    <h3>Stacja Numer: {0}</h3>                    <div class="content__dsc">                        <div class="content__dsc__text">                            <h4>{2}</h4>                            ul. {3}<br />                            {4} {5}, {6}<br />                            GPS: {8} {9}<br />                            tel. {7}<br />                            Otwarta: {16}                        </div>                        <div class="content__dsc__photo"><img src="{1}" alt="{2}" /></div>                    </div>                </div>                <div class="content">                    <ul class="content__list list--main-icons">                        {15}                    </ul>                </div>                <div class="content">                    <ul class="content__list">                        {13}                    </ul>                    <ul class="content__list">                        {10}                    </ul>                    <ul class="content__list">                        {11}                    </ul>                    <ul class="content__list">                        {12}                    </ul>                    <ul class="content__list">                        {14}                    </ul>                </div>            </div>',
        STATION_FULL_INFO__REDESIGN:
          '<div class="_orlen__actions">                <a href="#" class="_orlen_petrol_link close__details">                    <i class="icon icon--arrow-back"></i>                     Powrót                </a>            </div>            <div class="custom-scroll">            <div class="content__dsc-wraper">                <div class="content__dsc__photo"><img src="{1}" alt="{2}" /></div>                    <div class="content">                        <h3 class="content__dsc-title">Stacja Numer: {0}</h3>                        <div class="content__dsc">                            <div class="content__dsc__text">                                ul. {3}<br />                                {4} {5}, {6}<br />                                <a href="{17}" id="show_on_the_map_{0}" class="_orlen_petrol_link content__dsc-link" target="_blank">Wskazówki dojazdu</a>                            </div>                        </div>                    </div>                </div>                    <ul class="content__list-main content__list-petrol">                        {11}                    </ul>                     <ul class="content__list-main content__list-card">                        {14}                    </ul>                <div class="content">                    <ul class="content__list">                        {13}                    </ul>                    <ul class="content__list">                        {10}                    </ul>                    <ul class="content__list">                        {12}                    </ul>                </div>            </div>',
        MESSAGE_FILTERS_GAS: "Paliwa",
        MESSAGE_FILTERS_FACILITIES: "Udogodnienia",
        MESSAGE_FILTERS_SERVICES: "Usługi",
        MESSAGE_FILTERS_FOOD: "Gastronomia",
        MESSAGE_FILTERS_FOOD_NEW: "Gastronomia / Art. Spożywcze",
        MESSAGE_FILTERS_CARDS: "Karty",
        MESSAGE_CLUSTER_TOOLTIP: "Ilość stacji: ",
        MESSAGE_SEARCH_STATION: "Trwa wyszukiwanie najbliższych stacji...",
        MESSAGE_OPTIONS_SELECTED: "wybrano",
      },
      EN: {
        MESSAGE_SELECT_WAYPOINT:
          'There was chosen ambiguous location. Select an item from the list above or select the point on the map, confirm your choice by clicking "select"',
        MESSAGE_ROUTE_NOT_FOUND: "Route not found.",
        MESSAGE_LOCALIZATION_NOT_FOUND: "Localization not found.",
        MESSAGE_SELECT_LOCALIZATION: "select localization...",
        MESSAGE_SELECT_BUTTON: "select",
        MESSAGE_WAIT: "Wait...",
        MESSAGE_STATION_NUMBER: "Gas station no",
        MESSAGE_STATION_STREET: "",
        MESSAGE_MORE: "More",
        MESSAGE_MORE__NEW: "Details",
        MESSAGE_CHOOSE: "Choose",
        MESSAGE_OPTIONS_TITLE__REDESIGN: "Other options",
        MESSAGE_OPEN: "Open",
        MESSAGE_OPEN__24: "Open 24h",
        MESSAGE_OPTIONS__REDESIGN: "Other options",
        MESSAGE_INPUT_SEARCH__REDESIGN: "Nearby my current location",
        MESSAGE_STATION_NOT_FOUND: "No search results!",
        STATION_TEMPLATE__NEW:
          '<div class="oneResult"><div class="img"><img src="{5}" alt="{7}"/></div><div class="info"><strong>Gas station no: {6}</strong><br/>street. {1}<br />{2}<br/><span class="text--gray">GPS: {3}</span><br /><a href="" id="show_on_the_map_{0}" class="_orlen_petrol_link">Show on the map</a><div class="distance">{4}</div></div></div>',
        STATION_TEMPLATE:
          '<div class="oneResult"><div class="img"><img src="{4}" alt="logo"/></div><div class="info"><strong>Gas station no: {5}</strong><br/>{1} street, GPS: {2}<br />Distance: {3}<br /><a href="" id="show_on_the_map_{0}" class="_orlen_petrol_link">Show on the map</a></div></div>',
        STATION_TEMPLATE__REDESIGN:
          '<div class="oneResult__link show_on_the_map_{0}" data-localid="{8}"><div class="oneResult"><div class="oneResult__img img"><img src="{5}" alt="{7}"/></div><div class="oneResult__info info"><strong>Station no.: {6}</strong><div class="oneResult__info-details">ul. {1}<br />{2} {9}</div></div><div class="oneResult__additional-info"><div class="oneResult__distance distance">{4}</div><a href="{10}" class="oneResult__route _orlen_petrol_link" target="_blank">Route</a></div></div></div>',
        STATION_FULL_INFO:
          '<div class="orlen-layer">                <div class="content">                    <div class="photo"><img src="{1}" /></div>                    <div class="description" style="min-height: 260px;">                        <div style="float:right; width: 240px; height: 240px;" id="divMap">                            <img src="https://maps.googleapis.com/maps/api/staticmap?' +
          (ORLEN.vars.$googleKey ? "key=" + ORLEN.vars.$googleKey + "&" : "") +
          'center={8},{9}&zoom=13&size=240x240&maptype=roadmap&markers=color:red%7Clabel:C%7C{8},{9}&sensor=false" />                        </div>                        <strong>Station no: {0} </strong><br />                        <strong>Retail network: {2} </strong><br /><br />                        {3}, {4} {5}, {6}<br />                        tel.: {7}<br />                        Open: {16}                        <br /><br />                        <strong>Coordinates:</strong><br />                        Width {8}<br />                        Length {9}                    </div>                    <div style="clear: both"></div>                    <div class="content02">                        <ul class="list01 w170px">                            <li><h4>Gas</h4></li>                            {10}                        </ul>                        <ul class="list01 w240px">                            <li><h4>Facilities</h4></li>                            {11}                        </ul>                        <ul class="list01 w190px">                            <li><h4>Services</h4></li>                            {12}                        </ul>                        <ul class="list01 w170px">                            <li><h4>Food</h4></li>                            {13}                        </ul>                        <ul class="list01 w170px">                            <li><h4>Cards</h4></li>                            {14}                        </ul>                    </div>                    <div style="clear: both"></div>                </div>            </div>',
        STATION_FULL_INFO__NEW:
          '<div class="_orlen__actions">                <a href="#" class="_orlen_petrol_link close__details">                    <i class="icon icon--arrow-back"></i>                     back to results                </a>            </div>            <div class="custom-scroll">                <div class="content">                    <h3>Station no: {0}</h3>                    <div class="content__dsc">                        <div class="content__dsc__text">                            <h4>{2}</h4>                            {3}<br />                            {4} {5}, {6}<br />                            GPS: {8} {9}<br />                            phone no: {7}<br />                            Open: {16}                        </div>                        <div class="content__dsc__photo"><img src="{1}" alt="{2}" /></div>                    </div>                </div>                <div class="content">                    <ul class="content__list list--main-icons">                        {15}                    </ul>                </div>                <div class="content">                    <ul class="content__list">                        {13}                    </ul>                    <ul class="content__list">                        {10}                    </ul>                    <ul class="content__list">                        {11}                    </ul>                    <ul class="content__list">                        {12}                    </ul>                    <ul class="content__list">                        {14}                    </ul>                </div>            </div>',
        STATION_FULL_INFO__REDESIGN:
          '<div class="_orlen__actions">                <a href="#" class="_orlen_petrol_link close__details">                    <i class="icon icon--arrow-back"></i>                     Back                </a>            </div>            <div class="custom-scroll">            <div class="content__dsc-wraper">                <div class="content__dsc__photo"><img src="{1}" alt="{2}" /></div>                    <div class="content">                        <h3 class="content__dsc-title">Station no.: {0}</h3>                        <div class="content__dsc">                            <div class="content__dsc__text">                                ul. {3}<br />                                {4} {5}, {6}<br />                                <a href="{17}" id="show_on_the_map_{0}" class="_orlen_petrol_link content__dsc-link" target="_blank">Route directions</a>                            </div>                        </div>                    </div>                </div>                    <ul class="content__list-main content__list-petrol">                        {11}                    </ul>                     <ul class="content__list-main content__list-card">                        {14}                    </ul>                <div class="content">                    <ul class="content__list">                        {13}                    </ul>                    <ul class="content__list">                        {10}                    </ul>                    <ul class="content__list">                        {12}                    </ul>                </div>            </div>',
        MESSAGE_FILTERS_GAS: "Gas",
        MESSAGE_FILTERS_FACILITIES: "Facilities",
        MESSAGE_FILTERS_SERVICES: "Services",
        MESSAGE_FILTERS_FOOD: "Food",
        MESSAGE_FILTERS_FOOD_NEW: "Gastronomy / Groceries",
        MESSAGE_FILTERS_CARDS: "Cards",
        MESSAGE_CLUSTER_TOOLTIP: "Amount of gas stations: ",
        MESSAGE_SEARCH_STATION: "Searching nearest gas stations...",
        MESSAGE_OPTIONS_SELECTED: "selected",
      },
    };
    return { showMessage: t, getMessage: e, clear: n };
  })()),
  (ORLEN.icons = (function () {
    function e(e) {
      var t = "1345",
        n = "1346",
        o = "1351",
        i = "1352",
        r = "1374-" + t,
        s = "1452",
        a = "1453",
        l = "1454",
        c = "1455",
        d = "1456",
        p = ORLEN.vars.$imagesURL,
        u = [];
      return (
        (u[n] = p + "icoGoogleBliska2.gif"),
        (u[t] = p + "icoGoogleOrlen2.gif"),
        (u[o] = p + "icoGoogleCpn.gif"),
        (u[i] = p + "icoGooglePetrochemia.gif"),
        (u[r] = p + "icoGoogleOrlenStopCafe2.gif"),
        (u[n + "_" + t] = p + "icoGoogleOrlenBliska2.gif"),
        (u[r + "_" + n + "_" + t] = p + "icoGoogleOrlenBliska2.gif"),
        (u[r + "_" + t] = p + "icoGoogleOrlenStopCafe2.gif"),
        (u[r + "_" + n] = p + "icoGoogleOrlenBliska2.gif"),
        (u[s] = p + "icoGoogleStar.gif"),
        (u[a] = p + "icoGoogleOrlenLietuva.gif"),
        (u[l] = p + "icoGoogleVentus.gif"),
        (u[c] = p + "icoGoogleBenzina.gif"),
        (u[d] = p + "icoGoogleBenzinaPlus.gif"),
        (u[d + "_" + c] = p + "icoGoogleBenzinaBenzinaPlus.gif"),
        (u[l + "_" + a] = p + "icoGoogleOrlenLVentus.gif"),
        u[e]
      );
    }
    function t(e) {
      var t,
        n = ORLEN.vars.$imagesURL;
      return (
        (t =
          -1 !== e.indexOf("1374")
            ? "marker_stopcafe_grey.png"
            : "marker_orlen_grey.png"),
        n + t
      );
    }
    return { get: e, getNormalizedIcon: t };
  })()),
  (ORLEN.IDS = {
    ORLEN: 1345,
    BLISKA: 1346,
    CPN: 1351,
    PETROCHEMIA: 1352,
    CAFE: 1374,
    STAR: 1452,
    ORLENLTV: 1453,
    VENTUS: 1454,
    BENZINA: 1455,
    BENZINAPLUS: 1456,
  }),
  (ORLEN.formatString = function () {
    var e, t, n;
    for (e = arguments[0], n = 0; n < arguments.length - 1; n++)
      (t = new RegExp("\\{" + n + "\\}", "gm")),
        (e = e.replace(t, arguments[n + 1]));
    return e;
  }),
  (ORLEN.isIE = function () {
    var e = navigator.userAgent.toLowerCase();
    return -1 !== e.indexOf("msie") ? parseInt(e.split("msie")[1]) : !1;
  }),
  (ORLEN.extend = function (e, t) {
    var n;
    for (n in t)
      t.hasOwnProperty(n) &&
        ("object" == typeof t[n]
          ? ((e[n] = e[n] || {}), arguments.callee(e[n], t[n]))
          : (e[n] = t[n]));
  }),
  (ORLEN.startInit = function () {
    "function" == typeof ORLEN.loadFancyBox &&
      ORLEN.loadFancyBox(window, document, $),
      setTimeout(function () {
        return "undefined" == typeof window.orlenPluginInit
          ? void alert("Funckja window.orlenPluginInit nie została znaleziona")
          : void (
              "undefined" == typeof window.orlenPluginIsLoaded &&
              ((window.orlenPluginIsLoaded = !0), window.orlenPluginInit())
            );
      }, 0);
  }),
  (ORLEN.debug = function (e) {
    ORLEN.settings.debug && console.log(e);
  }),
  (ORLEN.helper = (function () {
    function e(e) {
      var t = ORLEN.settings.overrideResultImage;
      if (0 === t.length) return { status: !1, name: "" };
      for (var n = 0; n < t.length; n++)
        if (t[n].id == e) return { status: !0, name: t[n].name };
      return { status: !1, name: "" };
    }
    function t() {
      var e = {
        kw: "",
        from: "",
        to: "",
        s: ORLEN.filters.all(),
        wp: ORLEN.filters.getWayPoints(),
        dst: 0,
      };
      return (
        "_orlen_route_find" ===
        $("#_orlen_tabs_nav").find("a._orlen_active").attr("href")
          ? ((e.from = ORLEN.filters.getInput("from")),
            (e.to = ORLEN.filters.getInput("to")))
          : ((e.kw = ORLEN.filters.getInput("search")),
            (e.dst = ORLEN.filters.getDistance())),
        e
      );
    }
    return { getCurrentStateParams: t, findOverrideImage: e };
  })()),
  (ORLEN.filters = (function () {
    function e(e) {
      var t,
        n = [];
      return (
        "food" === e && ORLEN.settings.newLook && (e = "food_new"),
        (t =
          "stations" === e
            ? $("#_orlen_petrol_stations").find(
                'input[type="checkbox"]:checked',
              )
            : "services" === e
              ? $("#_orlen_filters")
                  .children()
                  .filter(function () {
                    return /^(gas|services)$/.test($(this).attr("data-type"));
                  })
                  .find('input[type="checkbox"]:checked')
              : $("#_orlen_filters").find(
                  'dl[data-type="' +
                    e.toLowerCase() +
                    '"] input[type="checkbox"]:checked',
                )),
        t.each(function (e, t) {
          n.push(t.value);
        }),
        n.join(";")
      );
    }
    function t(e, t) {
      var n = $("#_orlen_petrol_stations, #_orlen_filters").find(
          'input[value="' + e + '"]',
        ),
        o = $("#_orlen_promoted_filters").find('input[data-id="' + e + '"]');
      n.add(o).prop("checked", !0);
    }
    function n() {
      $("#_orlen_petrol_stations, #_orlen_filters, #_orlen_promoted_filters")
        .find('input[type="checkbox"]:checked')
        .each(function (e, t) {
          t.checked = !1;
        });
    }
    function o() {
      var e = [];
      return (
        $("#_orlen_petrol_stations, #_orlen_filters")
          .find('input[type="checkbox"]:checked')
          .each(function (t, n) {
            e.push(n.value);
          }),
        e.join(";")
      );
    }
    function i(e, t) {
      "search" === e
        ? $("#_orlen_petrol_search_input").val(t)
        : ("from" === e || "to" === e) &&
          $("#_orlen_petrol_route_" + e + "_input").val(t);
    }
    function r(e) {
      var t;
      if ("search" === e) t = $("#_orlen_petrol_search_input");
      else {
        if ("from" !== e && "to" !== e) return null;
        t = $("#_orlen_petrol_route_" + e + "_input");
      }
      return t.attr("data-val") === t.val() ? "" : t.val();
    }
    function s() {
      var e = [];
      return (
        $('input[name="_orlen_petrol_route_point_input[]"]')
          .slice(1)
          .each(function (t, n) {
            e.push(n.value);
          }),
        e.join(";")
      );
    }
    function a(e) {
      var t,
        n = $("#_orlen_petrol_route_points");
      return (
        (t = n.children().length),
        $("#_orlen_petrol__add_route_point", n).trigger("click"),
        t + 1 === n.children().length
          ? (n
              .find('input[name="_orlen_petrol_route_point_input[]"]')
              .last()
              .val(e),
            !0)
          : !1
      );
    }
    function l() {
      var e, t;
      return (
        (e = $("#_orlen_petrol_find").find("select.change-distance")),
        (t = e.parent().find("input:checkbox")),
        t.is(":checked")
          ? parseInt(
              $("#_orlen_petrol_find")
                .find("select.change-distance")
                .find(":selected")
                .val(),
            )
          : 0
      );
    }
    function c(e) {
      var t, n;
      (t = $("#_orlen_petrol_find").find("select.change-distance")),
        (n = t.parent().find("input:checkbox")),
        e > 0 && t.find('option[value="' + e + '"]').length > 0
          ? (t.val(e), (t[0].disabled = !1), n.length && (n[0].checked = !0))
          : ((t[0].disabled = !0), n.length && (n[0].checked = !1));
    }
    return {
      get: e,
      set: t,
      clear: n,
      all: o,
      getInput: r,
      setInput: i,
      getDistance: l,
      setDistance: c,
      getWayPoints: s,
      addWayPoint: a,
    };
  })()),
  (ORLEN.searchByRoute = (function () {
    function e(e) {
      var t;
      (n = e),
        (r = 0),
        (i = null),
        (o = 1),
        e.length > ORLEN.vars.$howManyPolylinePerRequest &&
          ((o = parseInt(e.length / ORLEN.vars.$howManyPolylinePerRequest)),
          (t = e.length % ORLEN.vars.$howManyPolylinePerRequest),
          0 !== t && o++),
        ORLEN.debug("Total packages count to send " + o),
        (s = {
          packagesCount: o,
          gasStationType: ORLEN.filters.get("stations"),
          point: "",
          keyWords: "",
          tags: "",
          topN: ORLEN.vars.$maxLocations,
          services: ORLEN.filters.get("services"),
          food: ORLEN.filters.get("food"),
          cards: ORLEN.filters.get("cards"),
          facilities: ORLEN.filters.get("facilities"),
        }),
        ORLEN.requests.findGasStationsPackageFirst(s);
    }
    function t(e) {
      var t, s, a;
      return (
        0 === r && (ORLEN.debug("Got package key " + e), (i = e)),
        r === o
          ? ((a = { packageKey: i }),
            ORLEN.debug("All polylines was sent"),
            void (ORLEN.settings.newLookRedesign
              ? ORLEN.requests.findGasStationsPackageGetResulatDetails(a)
              : ORLEN.requests.findGasStationsPackageGetResulat(a)))
          : (ORLEN.debug(
              "Current request " + r + " preparing next package to send",
            ),
            (t = ""),
            (s = n.splice(0, ORLEN.vars.$howManyPolylinePerRequest)),
            ORLEN.debug("Splicing " + s.length + " left " + n.length),
            s.length > 0 &&
              $(s).each(function (e, n) {
                (t += n.lat() + " " + n.lng()), (t += ",");
              }),
            r++,
            r === o && (t = t.substring(0, t.length - 1)),
            (a = { packageKey: i, packageNumber: r, polyLine: t }),
            void ORLEN.requests.findGasStationsPackageNextPolyLine(a))
      );
    }
    var n, o, i, r, s;
    return { findGasStationsByRoute: e, findGasStationsPackageNextPolyLine: t };
  })()),
  (ORLEN.structure = (function () {
    function e() {
      var e;
      return "undefined" != typeof $
        ? !0
        : ((e = document.createElement("script")),
          "object" == typeof document.attachEvent
            ? (e.onreadystatechange = function () {
                "loaded" === e.readyState && ORLEN.startInit();
              })
            : (e.onload = function () {
                ORLEN.startInit();
              }),
          (e.src = u.$jQueryURL),
          document.getElementsByTagName("head")[0].appendChild(e),
          void 0);
    }
    function t() {
      "undefined" == typeof google
        ? $.getScript(
            u.$gMapURL +
              "?language=" +
              ORLEN.settings.languageCode +
              "&key=" +
              ORLEN.vars.$googleKey +
              "&sensor=true&callback=ORLEN.map.init",
          )
        : google.maps.event.addDomListener(window, "load", ORLEN.map.init);
    }
    function n(e) {
      var t = u.$filters,
        n = $("<ul>"),
        o = $("<div>", { class: "_orlen_petrol_option_flex" }),
        i = l();
      $(e).each(function (e, r) {
        if (-1 !== $.inArray(r.RelatedFilterId[0], t)) {
          if (ORLEN.settings.newLookRedesign) {
            var s = "";
            void 0 !== i.s &&
              i.s.length > 0 &&
              -1 !== i.s.split(";").indexOf(String(r.RelatedFilterId[0])) &&
              (s += "_orlen_petrol_option_btn--active"),
              o.append(
                '<a href="?s=' +
                  r.RelatedFilterId.join(";") +
                  '" data-id="' +
                  r.RelatedFilterId[0] +
                  '" class="_orlen_petrol_option_btn ' +
                  s +
                  '">' +
                  r.CategoryName +
                  "</a>",
              );
          }
          ORLEN.settings.newLook
            ? n.append(
                $("<li>").append(
                  $("<div>", { class: "checkbox" })
                    .append(
                      $("<input>", {
                        id: "filter" + r.RelatedFilterId[0],
                        type: "checkbox",
                        value: r.RelatedFilterId.join("|"),
                        "data-id": r.RelatedFilterId[0],
                      }),
                    )
                    .append(
                      $("<label>", {
                        for: "filter" + r.RelatedFilterId[0],
                      }).append(r.CategoryName),
                    ),
                ),
              )
            : n.append(
                $("<li>").append(
                  $("<label>", { for: "filter" + r.RelatedFilterId[0] })
                    .append(
                      $("<input>", {
                        id: "filter" + r.RelatedFilterId[0],
                        type: "checkbox",
                        value: r.RelatedFilterId.join("|"),
                        "data-id": r.RelatedFilterId[0],
                      }),
                    )
                    .append(
                      $("<img>", {
                        src:
                          ORLEN.vars.$imagesURL +
                          "icoGasStation" +
                          r.CategoryId +
                          ".png",
                      }),
                    ),
                ),
              );
        }
        u.$mainFilters.push({ id: r.CategoryId, name: r.CategoryName });
      }),
        0 !== n.children().length
          ? ($("#_orlen_promoted_filters").prepend(n),
            ORLEN.settings.newLookRedesign &&
              ($("._orlen_petrol_main_categories").prepend(o),
              $("#_orlen_promoted_filters").hide()))
          : n.remove();
    }
    function o(e, t) {
      var n = $("#_orlen_filters"),
        o = $("<dl>", { "data-type": t.toLowerCase() }),
        i = u.$filters;
      $(e).each(function (e, t) {
        -1 !== $.inArray(t.Key, i) &&
          (ORLEN.settings.newLook
            ? $("<dd>")
                .append(
                  $("<div>", { class: "checkbox" })
                    .append(
                      $("<input>", {
                        type: "checkbox",
                        value: t.Key,
                        "data-id": t.Key,
                        id: "id-" + t.Key,
                      }),
                    )
                    .append(
                      $("<label>", { for: "id-" + t.Key }).append(
                        t.Value +
                          '<a href="?s=' +
                          t.Key +
                          '" class="_orlen_petrol_copy"></a>',
                      ),
                    ),
                )
                .appendTo(o)
            : $("<dd>")
                .append(
                  $("<label>")
                    .append(
                      $("<input>", {
                        type: "checkbox",
                        value: t.Key,
                        "data-id": t.Key,
                      }),
                    )
                    .append(t.Value),
                )
                .appendTo(o));
      }),
        o.children().length > 0
          ? n.append(
              o.prepend(
                $("<dt>")
                  .addClass("_orlen_petrol_title")
                  .text(
                    ORLEN.message.getMessage(
                      "MESSAGE_FILTERS_" + t.toUpperCase(),
                    ),
                  ),
              ),
            )
          : o.remove(),
        ORLEN.settings.newLook
          ? u.$filterGroupsNew.length > 0
            ? ORLEN.requests.getRegionalizedDictionaryItems(
                u.$filterGroupsNew.pop(),
              )
            : ORLEN.requests.getCountriesWithBrands()
          : u.$filterGroups.length > 0
            ? ORLEN.requests.getRegionalizedDictionaryItems(
                u.$filterGroups.pop(),
              )
            : ORLEN.requests.getCountriesWithBrands();
      var r = function () {};
      $("._orlen_petrol_copy")
        .off()
        .on("click", function (e) {
          e.preventDefault();
          var t = $(this),
            n = $(this).attr("href");
          $("._orlen_petrol_copy_state").remove(),
            clearTimeout(r),
            navigator.clipboard
              .writeText(location.origin + location.pathname + n)
              .then(
                function () {
                  t.after(
                    '<span class="_orlen_petrol_copy_state">skopiowiano</span>',
                  ),
                    (r = setTimeout(function () {
                      $("._orlen_petrol_copy_state").remove();
                    }, 1e3));
                },
                function () {
                  t.after('<span class="_orlen_petrol_copy_state">błąd</span>'),
                    (r = setTimeout(function () {
                      $("._orlen_petrol_copy_state").remove();
                    }, 1e3));
                },
              );
        }),
        $(".js-saveFilters")
          .off()
          .on("click", function (e) {
            return (
              e.preventDefault(),
              $("#_orlen_petrol_find").is(":visible")
                ? $("#_orlen_petrol_search_button").trigger("click")
                : $("#_orlen_petrol_route_search_button").trigger("click"),
              $("._orlen_options").removeClass("opened"),
              ORLEN.settings.newLookRedesign && d(),
              !1
            );
          });
    }
    function i(e) {
      var t,
        n = $("#_orlen_petrol_stations"),
        o = u.$network;
      $(e).each(function (e, t) {
        var i = $("<dl>");
        n.children().last().before(i),
          $(t.Brands).each(function (e, n) {
            if (-1 !== $.inArray(n.Key, o))
              if (ORLEN.settings.newLook) {
                var r = "checked";
                ORLEN.settings.newLookRedesign && (r = null),
                  i.append(
                    $('<dd class="country-brands">').append(
                      $("<div>", { class: "checkbox" })
                        .append(
                          $("<input>", {
                            type: "checkbox",
                            checked: r,
                            value: n.Key,
                            id: "id-" + n.Key,
                          })
                            .attr("data-brand-contry", t.Country)
                            .attr("data-brand-contry-id", t.CountryId),
                        )
                        .append(
                          $("<label>", { for: "id-" + n.Key }).append(
                            $("<img>", {
                              src:
                                ORLEN.vars.$imagesURL +
                                "icoGasStation" +
                                n.Key +
                                ".svg",
                            }),
                          ),
                        ),
                    ),
                  );
              } else
                i.append(
                  $('<dd class="country-brands">').append(
                    $("<label>")
                      .append(
                        $('<input type="checkbox" checked="checked"/>')
                          .val(n.Key)
                          .attr("data-brand-contry", t.Country)
                          .attr("data-brand-contry-id", t.CountryId),
                      )
                      .append(
                        $("<img>", {
                          src:
                            ORLEN.vars.$imagesURL +
                            "icoGasStation" +
                            n.Key +
                            ".png",
                        }),
                      ),
                  ),
                );
          }),
          0 !== i.children().length
            ? ORLEN.settings.newLook
              ? (i.prepend(
                  $("<dt>").addClass("_orlen_title").text(this.Country),
                ),
                n.children().last().after(i))
              : (i.prepend(
                  $("<dt>").addClass("_orlen_petrol_title").text(this.Country),
                ),
                n.children().last().before(i))
            : i.remove();
      }),
        ORLEN.isIE() !== !1 &&
          ORLEN.isIE() < 9 &&
          ((t = $("#_orlen_petrol_stations")),
          t.delegate("label img", "click", function () {
            $(this).siblings('input[type="checkbox"]').trigger("click");
          }));
    }
    function r(e) {
      var t,
        n,
        o = $("#orlen_plugin");
      (n = function () {
        var e = $(this),
          t = e.attr("id");
        "_orlen_petrol_search_input" === t
          ? $("#_orlen_petrol_route_from_input").val(e.val())
          : $("#_orlen_petrol_search_input").val(e.val());
      }),
        o.html(e),
        $("#_orlen_petrol_search_p", o).width(ORLEN.settings.width),
        $("#_orlen_petrol_route_points div", o).hide(),
        $("#_orlen_route_find a._orlen_petrol_button", o).hide(),
        ORLEN.settings.newLookRedesign
          ? $("#_orlen_petrol_route_search_button", o).css("display", "block")
          : $("#_orlen_petrol_route_search_button", o).show(),
        $("#_orlen_petrol_search_input", o)
          .after(
            $("<a>", {
              class: "_orlen_petrol_button",
              style: "display: inline-block;",
              href: "",
            })
              .text(ORLEN.message.getMessage("MESSAGE_SELECT_BUTTON") + " ›")
              .hide(),
          )
          .after(
            $("<select>", { style: "width: 70%; margin-right: 5%" }).hide(),
          )
          .keyup(n),
        $("#_orlen_petrol_route_from_input", o).keyup(n),
        navigator.geolocation || $("#_orlen_petrol_geosearch_button").hide(),
        $("#_orlen_petrol_search_link_input", o)
          .bind("focus click", function () {
            this.select();
          })
          .bind("mouseup", function () {
            return !1;
          }),
        ORLEN.message.clear(),
        o.append(
          $("<div>")
            .attr("id", "orlen_plugin_fade")
            .addClass("orlen_plugin_fade")
            .html(
              $("<img>")
                .addClass("spinner")
                .attr("src", ORLEN.vars.$imagesURL + "ajax-loader.gif"),
            )
            .append($("<span>").html(ORLEN.message.getMessage("MESSAGE_WAIT"))),
        ),
        $("#_orlen_petrol_find", o)
          .find("div:eq(1)")
          .find("select")
          .addClass("change-distance")
          .attr("disabled", "disabled"),
        $("#_orlen_petrol_find", o)
          .find("select option")
          .each(function () {
            $(this).val(parseInt($(this).text()));
          }),
        (t = o.find("._orlen_petrol_error").clone()),
        o.find("#_orlen_petrol_find_buttons").after(t),
        ORLEN.settings.newLookRedesign && ORLEN.structure.redesignDomChange();
    }
    function s(e) {
      var t, n, o;
      ORLEN.settings.showAjaxLoader &&
        ((t = $("#orlen_plugin_fade")),
        "show" === e
          ? ((n = $("#orlen_plugin_fade img.spinner")),
            (o = $(window).height()),
            n.css({ top: (o - 40) / 2 + "px" }),
            t.find("span").css({ top: (o - 40) / 2 + 60 + "px" }),
            t.show())
          : "hide" === e && t.hide());
    }
    function a(e) {
      function t(e, i) {
        var c, d, p;
        if (
          (ORLEN.debug("Current index " + e),
          !(e <= ORLEN.vars.directionMatrixDistance.length - 1 && 20 >= e))
        ) {
          if (
            (ORLEN.debug("Render gas stations"),
            (a = ORLEN.vars.directionMatrixDistance),
            (a = $.grep(a, function (e) {
              return "undefined" !== e.distanceInt && e.distanceInt > 0;
            })),
            a.sort(function (e, t) {
              return parseInt(e.distanceInt) - parseInt(t.distanceInt);
            }),
            (d = $('<div class="divPage"></div>')),
            ORLEN.settings.newLookRedesign || ORLEN.settings.newLook)
          )
            for (var u = 0, _ = a.length; _ > u; u++) {
              c = a[u];
              var g = ORLEN.helper.findOverrideImage(c.GasStationTypeId),
                h = "",
                f = "",
                v =
                  "https://www.google.com/maps/dir/?api=1&origin=" +
                  (null !== ORLEN.vars.gpsPos
                    ? ORLEN.vars.gpsPos.lat() + "," + ORLEN.vars.gpsPos.lng()
                    : "Polska") +
                  "&destination=" +
                  c.Latitude +
                  "," +
                  c.Longitude +
                  "&travelmode=driving";
              ORLEN.settings.newLookRedesign
                ? ((h = "STATION_TEMPLATE__REDESIGN"),
                  (f = ORLEN.vars.$imagesURL + "orlen_logo.svg"))
                : ((h = "STATION_TEMPLATE__NEW"),
                  (f =
                    ORLEN.vars.$imagesURL +
                    (g.status
                      ? g.name
                      : "icoGasStation" + c.GasStationTypeId + "-rect.svg")));
              var m = "";
              "Całodobowo" === c.OpeningHours &&
                (m =
                  "<div class='oneResult__open'><span>" +
                  ORLEN.message.getMessage("MESSAGE_OPEN__24") +
                  "</span></div>"),
                (p = ORLEN.formatString(
                  ORLEN.message.getMessage(h),
                  c.LocalId,
                  c.StreetAddress + " " + c.StreetNumber,
                  c.PostalCode + " " + c.City,
                  c.Latitude + " " + c.Longitude,
                  c.distance,
                  f,
                  c.LocalId,
                  c.GasStationTypeName,
                  c.Id,
                  m,
                  v,
                )),
                n.append(p);
            }
          else {
            a = a.splice(0, 10);
            for (var u = 0, _ = a.length; _ > u; u++) {
              c = a[u];
              var g = ORLEN.helper.findOverrideImage(c.GasStationTypeId);
              (u + 1) % 10 === 0 &&
                (n.append(d), (d = $('<div class="divPage"></div>'))),
                "distance" in c &&
                  ((p = ORLEN.formatString(
                    ORLEN.message.getMessage("STATION_TEMPLATE"),
                    c.LocalId,
                    c.StreetAddress +
                      " " +
                      c.StreetNumber +
                      " " +
                      c.PostalCode +
                      " " +
                      c.City,
                    c.Latitude + " " + c.Longitude,
                    c.distance,
                    ORLEN.vars.$imagesURL +
                      (g.status
                        ? g.name
                        : "icoGasStation" + c.GasStationTypeId + ".png"),
                    c.LocalId,
                  )),
                  d.append(p));
            }
          }
          for (
            ORLEN.settings.newLook
              ? ($(
                  ".show_response_loader, .show_response_loader-text",
                ).remove(),
                n.fadeIn(200))
              : (n.append(d),
                n
                  .find(".show_response_loader, .show_response_loader-text")
                  .remove()),
              ORLEN.domevents.updateTextColor(),
              u = 0,
              _ = a.length;
            _ > u;
            u++
          )
            (c = a[u]),
              $(ORLEN.vars.markersToChoose).each(function (e, t) {
                if (t.data.Id === c.Id) {
                  c.marker = t;
                  var n = ORLEN.settings.newLookRedesign
                    ? $(".show_on_the_map_" + c.LocalId)
                    : $("#show_on_the_map_" + c.LocalId);
                  return (
                    n.bind("click", c, function (e) {
                      return $(e.target).hasClass("oneResult__route")
                        ? void 0
                        : (ORLEN.map
                            .map()
                            .setCenter(e.data.marker.getPosition()),
                          ORLEN.map.map().setZoom(16),
                          google.maps.event.trigger(e.data.marker, "click"),
                          $("html, body").animate(
                            { scrollTop: $("#_orlen_petrol_map").offset().top },
                            20,
                          ),
                          !1);
                    }),
                    !1
                  );
                }
              });
          return ORLEN.structure.fade("hide"), !1;
        }
        setTimeout(function () {
          var n, r, c;
          (c = function (n, o) {
            var i;
            if (o !== google.maps.DistanceMatrixStatus.OK)
              ORLEN.debug("Error from DistanceMatrixService " + o), t(e, !1);
            else {
              i = n.originAddresses;
              for (var r = 0, a = i.length; a > r; r++)
                for (
                  var l = n.rows[r].elements, c = 0, d = l.length;
                  d > c;
                  c++
                )
                  (ORLEN.vars.directionMatrixDistance[e + c].distance =
                    l[c].distance.text),
                    (ORLEN.vars.directionMatrixDistance[e + c].distanceInt =
                      l[c].distance.value);
              ORLEN.debug("Response form Matrix Service"),
                ORLEN.debug(n),
                (e += s),
                t(e, !0);
            }
          }),
            (n = []),
            (r = []),
            i &&
              ((o = a.splice(0, s)),
              ORLEN.debug(
                "Splicing distance matrix " + o.length + " left " + a.length,
              )),
            n.push(ORLEN.vars.gpsPos);
          for (var d = 0, p = o.length; p > d; d++)
            r.push(new google.maps.LatLng(o[d].Latitude, o[d].Longitude));
          (l = new google.maps.DistanceMatrixService()),
            l.getDistanceMatrix(
              {
                origins: n,
                destinations: r,
                travelMode: google.maps.TravelMode.DRIVING,
              },
              c,
            );
        }, r);
      }
      var n, o, i, r, s, a, l;
      return (
        ORLEN.structure.fade("hide"),
        0 === e.length ||
        null === ORLEN.vars.gpsPos ||
        (ORLEN.vars.gpsPos.lat() === ORLEN.vars.$defaultLocalization[0] &&
          ORLEN.vars.gpsPos.lng() === ORLEN.vars.$defaultLocalization[1])
          ? !1
          : 0 === e.Count
            ? !1
            : ((a = e.Results),
              (n = $("#_orlen_response, ._orlen_petrol_poi")),
              (o = a.slice(0)),
              (ORLEN.vars.directionMatrixDistance = a.slice(0)),
              (i = 0),
              (s = 10),
              (r = 4e3),
              void (
                ORLEN.settings.showResultsList &&
                (ORLEN.settings.newLook
                  ? (n
                      .add("._orlen_petrol_poi-outer")
                      .addClass("orlen_result-rendered"),
                    ORLEN.settings.newLookRedesign
                      ? $("#_orlen_response, ._orlen_petrol_poi")
                          .find(
                            ".show_response_loader, .show_response_loader-text",
                          )
                          .remove()
                          .end()
                          .append(
                            '<div class="show_response_loader"></div><p class="show_response_loader-text">' +
                              ORLEN.message.getMessage(
                                "MESSAGE_SEARCH_STATION",
                              ) +
                              "</p>",
                          )
                      : $("#_orlen_petrol_find")
                          .find(".show_response_loader")
                          .remove()
                          .end()
                          .append('<div class="show_response_loader"></div>'))
                  : n.html(
                      '<div class="show_response_loader">' +
                        ORLEN.message.getMessage("MESSAGE_SEARCH_STATION") +
                        "</div>",
                    ),
                t(i, !0))
              ))
      );
    }
    function l() {
      var e,
        t,
        n = window.location.search.substring(1).split("&"),
        o = {};
      for (t in n)
        "" !== n[t] &&
          ((e = n[t].split("=")),
          (o[decodeURIComponent(e[0])] = decodeURIComponent(e[1] || "")));
      return o;
    }
    function c() {
      var e = (window.location.origin =
          window.location.protocol +
          "//" +
          window.location.hostname +
          (window.location.port ? ":" + window.location.port : "")),
        t = l(),
        n = window.location.hash ? window.location.hash : "";
      if (
        ($.extend(!0, t, ORLEN.helper.getCurrentStateParams()),
        $("#_orlen_petrol_search_link_input")
          .val(e + window.location.pathname + "?" + $.param(t) + n)
          .parent()
          .show(),
        ORLEN.settings.newLookRedesign && "URL" in window)
      ) {
        var o = new URL(window.location);
        Object.keys(t).forEach(function (e) {
          o.searchParams.set(e, t[e]);
        }),
          window.history.pushState({}, "", o.toString());
      }
    }
    function d() {
      var e = $("#_orlen_filters").find(":checked").length,
        t = $("#_orlen_petrol_find, #_orlen_route_find, ._orlen_options").find(
          "._orlen_petrol_filters_control",
        );
      t.find("._orlen_petrol_toggle_link_count").length > 0
        ? t
            .find("._orlen_petrol_toggle_link_count")
            .text(
              "(" +
                ORLEN.message.getMessage("MESSAGE_OPTIONS_SELECTED") +
                " " +
                e +
                ")",
            )
        : t
            .find("._orlen_petrol_toggle_link")
            .append(
              '<span class="_orlen_petrol_toggle_link_count">(' +
                ORLEN.message.getMessage("MESSAGE_OPTIONS_SELECTED") +
                " " +
                e +
                ")</span>",
            ),
        0 === e && t.find("._orlen_petrol_toggle_link_count").remove(),
        e > 0
          ? t.find("._orlen_petrol_clear_filter").show()
          : t.find("._orlen_petrol_clear_filter").hide();
    }
    function p() {
      $("#_orlen_petrol_find")
        .find("._orlen_petrol_toggle_link")
        .html(ORLEN.message.getMessage("MESSAGE_OPTIONS__REDESIGN")),
        $("#_orlen_route_find")
          .find("._orlen_petrol_toggle_link")
          .html(ORLEN.message.getMessage("MESSAGE_OPTIONS__REDESIGN")),
        $("#_orlen_petrol_search_input").attr(
          "placeholder",
          ORLEN.message.getMessage("MESSAGE_INPUT_SEARCH__REDESIGN"),
        ),
        $("#_orlen_response_way").hide(),
        $(".distance").hide(),
        $("._orlen_options").prepend(
          '<h3 class="_orlen_options__title">' +
            ORLEN.message.getMessage("MESSAGE_OPTIONS_TITLE__REDESIGN") +
            "</h3>",
        );
    }
    var u = ORLEN.vars;
    return {
      loadJquery: e,
      loadGoogleMapAPI: t,
      loadDom: r,
      loadBrands: i,
      loadMainFilters: n,
      loadFilterDetails: o,
      fade: s,
      renderLink: c,
      renderNearestGasStations: a,
      redesignDomChange: p,
      countSelectedFilters: d,
      searchToObject: l,
    };
  })()),
  (ORLEN.domevents = (function () {
    function e() {
      "" !== ORLEN.settings.customization.mainColor &&
        $("#_orlen_petrol_cont ._orlen_petrol_link").css(
          "color",
          ORLEN.settings.customization.mainColor,
        );
    }
    function t() {
      var e = function () {
        var e = $(this);
        e.val() === e.attr("data-val") && e.val("");
      };
      $(
        "#_orlen_petrol_route_from_input, #_orlen_petrol_route_to_input, #_orlen_petrol_search_input",
      ).focus(e),
        $("#_orlen_petrol_route_points").delegate(
          'input[name^="_orlen_petrol_route_point_input"]',
          "focus",
          e,
        );
    }
    function n() {
      var e = $("#_orlen_petrol_find").find("select.change-distance"),
        t = e.parent().find("input:checkbox");
      t.click(function () {
        $(this).is(":checked")
          ? e.removeAttr("disabled")
          : e.attr("disabled", "disabled");
      });
    }
    function o(e) {
      var t = document.createElement("link");
      t.setAttribute("rel", "stylesheet"),
        t.setAttribute("type", "text/css"),
        t.setAttribute("href", e),
        "undefined" != typeof t &&
          document.getElementsByTagName("head")[0].appendChild(t);
    }
    function i(e) {
      var t;
      o(ORLEN.vars.$mainCssFile),
        o(ORLEN.settings.customCssFile),
        ("" != e.secondaryColor || "" != e.mainColor) &&
          ("" == e.secondaryColor
            ? (e.secondaryColor = e.mainColor)
            : "" == e.mainColor && (e.mainColor = e.secondaryColor),
          $("#_orlen_petrol_cont ._orlen_petrol_button").css({
            "background-color": e.mainColor,
          }),
          (ORLEN.isIE() === !1 || ORLEN.isIE() > 9) &&
            ((t =
              "linear-gradient(top, " +
              e.secondaryColor +
              ", " +
              e.mainColor +
              ")"),
            $.each(
              ["", "-o-", "-moz-", "-webkit-", "-ms-", "repeating-"],
              function () {
                $("#_orlen_petrol_cont ._orlen_petrol_button").css({
                  "background-image": this + t,
                });
              },
            ))),
        "" != e.fontFamily &&
          $("#orlen_plugin").attr("style", "font-family: " + e.fontFamily),
        "" != e.mainColor &&
          ($("#_orlen_tabs_nav").css("border-bottom-color", e.mainColor),
          $("#_orlen_tabs_nav > a._orlen_active").css(
            "background",
            e.mainColor,
          ),
          $("#_orlen_tabs_nav > a").click(function () {
            $(this)
              .css("background", e.mainColor)
              .siblings()
              .css("background", "");
          }),
          $("#_orlen_petrol_cont ._orlen_petrol_link").css(
            "color",
            e.mainColor,
          )),
        "" != e.textColor &&
          $("#_orlen_petrol_cont > div").css({ color: e.textColor }),
        "" != e.secondBackground &&
          $("#_orlen_petrol_cont > div").css({
            background: e.secondBackground,
          }),
        "" != e.mainBackground &&
          $(
            "#_orlen_petrol_cont > div:first-child, #_orlen_petrol_cont > div:first-child + div",
          ).css("background", e.mainBackground);
    }
    function r() {
      var e,
        t,
        n = $("#_orlen_tabs_nav")
          .find("._orlen_active")
          .attr("href")
          .split("/"),
        o = n[n.length - 1];
      return (
        setTimeout(function () {
          $("#" + o).show();
        }, 500),
        ORLEN.settings.showTabs
          ? (ORLEN.settings.newLookRedesign
              ? ("_orlen_petrol_find" === o
                  ? (ORLEN.settings.isFindPetrolPath = !0)
                  : "_orlen_route_find" === o &&
                    (ORLEN.settings.isFindRoutePath = !0),
                (t = $("#_orlen_tabs_nav a")))
              : (t = $("#_orlen_tabs_nav > a")),
            void t.click(function (i) {
              var r = $(this);
              return (
                i.preventDefault(),
                r.hasClass("._orlen_active") ||
                  ((e = t.filter("._orlen_active")),
                  e.removeClass("_orlen_active"),
                  (n = e.attr("href").split("/")),
                  (o = n[n.length - 1]),
                  $("#" + o)
                    .hide()
                    .removeClass("active-tab"),
                  r.addClass("_orlen_active"),
                  (n = r.attr("href").split("/")),
                  (o = n[n.length - 1]),
                  $("#" + o)
                    .show()
                    .addClass("active-tab"),
                  ORLEN.settings.newLookRedesign &&
                    ("_orlen_petrol_find" === o
                      ? ((ORLEN.settings.isFindRoutePath = !1),
                        (ORLEN.settings.isFindPetrolPath = !0))
                      : "_orlen_route_find" === o &&
                        ((ORLEN.settings.isFindRoutePath = !0),
                        (ORLEN.settings.isFindPetrolPath = !1)))),
                !1
              );
            }))
          : ($("#_orlen_tabs_nav").remove(), !1)
      );
    }
    function s() {
      function e(e) {
        var n = e.is(":checked");
        return (
          $(e.val().split("|")).each(function () {
            $(
              'input[type="checkbox"][data-id="' + this + '"]',
              t.parent(),
            ).each(function () {
              this.checked = n;
            });
          }),
          !0
        );
      }
      var t = $("#_orlen_promoted_filters");
      t.find('input[type="checkbox"]').bind("click", function () {
        e($(this));
      }),
        t.delegate("label img", "click", function (t) {
          ORLEN.isIE() !== !1 &&
            ORLEN.isIE() < 9 &&
            $(this).siblings('input[type="checkbox"]').trigger("click"),
            e($(this).siblings('input[type="checkbox"]'));
        });
    }
    function a() {
      var e = $("._orlen_petrol_main_categories"),
        t = function (e) {
          var t = $("#_orlen_promoted_filters");
          t.find("input[data-id=" + e + "]").click();
        };
      e.find("._orlen_petrol_option_btn").bind("click", function (e) {
        e.preventDefault();
        var n = $(e.target),
          o = n.attr("data-id"),
          i = $("._orlen_petrol_option_btn").filter('[data-id="' + o + '"]');
        n.hasClass("_orlen_petrol_option_btn--active")
          ? i.removeClass("_orlen_petrol_option_btn--active")
          : i.addClass("_orlen_petrol_option_btn--active"),
          t(o),
          0 === n.closest("._orlen_options").length &&
            $(".js-saveFilters").trigger("click");
      });
    }
    function l() {
      $("._orlen_petrol_clear_filter").bind("click", function (e) {
        e.preventDefault(),
          $("._orlen_petrol_option_btn").removeClass(
            "_orlen_petrol_option_btn--active",
          ),
          $("#_orlen_promoted_filters input:checked").click(),
          $("#_orlen_filters input:checked").click(),
          $(".js-saveFilters").trigger("click");
      });
    }
    function c() {
      ($detailToggles = $("._orlen_petrol_toggle_link")),
        ($detailLayer = $("._orlen_options"));
      var e = $("._orlen_petrol_column-result"),
        t = null;
      $detailToggles.click(function (n) {
        n.preventDefault(),
          ORLEN.settings.newLook
            ? ($(this).parents("#_orlen_response_way").length <= 0
                ? ($detailLayer.toggleClass("opened"),
                  ORLEN.settings.newLookRedesign &&
                  $detailLayer.hasClass("opened")
                    ? ((t = e.scrollTop()),
                      e
                        .addClass("_orlen_petrol_column-result--overflow")
                        .scrollTop(0))
                    : ORLEN.settings.newLookRedesign &&
                      !$detailLayer.hasClass("opened") &&
                      e
                        .removeClass("_orlen_petrol_column-result--overflow")
                        .scrollTop(t))
                : $(this).parents("#_orlen_response_way").toggleClass("opened"),
              $detailToggles.find("label").click(function () {
                $detailToggles.css("position", "relative"),
                  $detailToggles.css("position", "absolute");
              }))
            : ($detailToggles.each(function () {
                var e = $(this),
                  t = e.text();
                e.text(e.attr("data-val")),
                  e.attr("data-val", t),
                  e.toggleClass("_orlen_petrol_toggle_link_less");
              }),
              $("#_orlen_filters, #_orlen_petrol_stations").toggle(),
              v("#_orlen_filters dl"),
              v("#_orlen_petrol_stations dl"));
      });
    }
    function d(e, t) {
      var n = 0;
      $(e.slice(0, 9)).each(function (e, o) {
        var i,
          r = 3,
          s = { id: e + 1, city: "", country: "", province: "" };
        $(o.address_components).each(function () {
          switch (this.types[0]) {
            case "locality":
              (s.city = this.long_name), r--;
              break;
            case "administrative_area_level_1":
              (s.province = this.long_name), r--;
              break;
            case "country":
              (s.country = this.long_name), r--;
          }
        }),
          r ||
            ((i = new google.maps.Marker({
              position: o.geometry.location,
              icon: ORLEN.formatString(ORLEN.vars.$choosePlaceIconSrc, n + 1),
              map: ORLEN.map.map(),
              title: s.city + ", " + s.country + ", " + s.province,
              select: t,
            })),
            $("<option>", {
              value:
                o.geometry.location.lat() + "|" + o.geometry.location.lng(),
              "data-fulltext": s.city + ", " + s.country + ", " + s.province,
              text: ++n + ": " + s.city + ", " + s.country + ", " + s.province,
            }).appendTo(t),
            google.maps.event.addListener(i, "click", function () {
              ORLEN.vars.currentInfoWindow &&
                ORLEN.vars.currentInfoWindow.close(),
                (ORLEN.vars.currentInfoWindow = new google.maps.InfoWindow({
                  content: i.title,
                })),
                ORLEN.vars.currentInfoWindow.open(ORLEN.map.map(), i),
                this.select.val(
                  this.position.lat() + "|" + this.position.lng(),
                ),
                (this.select.geolocalization = this.position);
            }),
            ORLEN.vars.markersToChoose.push(i));
      });
    }
    function p() {
      function e(e) {
        var t,
          n = "";
        null !== e &&
          ((ORLEN.vars.gpsPos = new google.maps.LatLng(e.lat(), e.lng())),
          (n = ORLEN.vars.gpsPos.lat() + " " + ORLEN.vars.gpsPos.lng())),
          (t = {
            gasStationType: ORLEN.filters.get("stations"),
            services:
              ORLEN.filters.get("services") +
              (ORLEN.filters.get("services") && ORLEN.filters.get("facilities")
                ? ";"
                : "") +
              ORLEN.filters.get("facilities"),
            tags: "",
            polyline: "",
            keyWords: "",
            food: ORLEN.filters.get("food"),
            cards: ORLEN.filters.get("cards"),
            point: n,
            distance: ORLEN.filters.getDistance(),
            topN: ORLEN.vars.$maxLocations,
            automaticallyIncreaseDistanceRadius: !0,
          }),
          null == e &&
            (ORLEN.vars.gpsPos = new google.maps.LatLng(
              ORLEN.vars.$defaultLocalization[0],
              ORLEN.vars.$defaultLocalization[1],
            )),
          ORLEN.filters.getDistance() > 0 ? i.findPOIDetails(t) : i.findPOI(t);
      }
      function t(t) {
        0 == t.length
          ? ORLEN.message.showMessage("MESSAGE_LOCALIZATION_NOT_FOUND")
          : 1 == t.length
            ? e(t[0].geometry.location)
            : (ORLEN.message.showMessage("MESSAGE_SELECT_WAYPOINT"),
              s.hide(),
              l.show(),
              a.empty().show(),
              $("<option>", {
                value: "",
                text: ORLEN.message.getMessage("MESSAGE_SELECT_LOCALIZATION"),
              }).appendTo(a),
              d(t, a)),
          ORLEN.structure.fade("hide");
      }
      function n(n) {
        return "undefined" !== n.Count && n.Count > 0
          ? (ORLEN.debug("Drawing map from tags"),
            ORLEN.domevents.drawMap(n),
            !1)
          : void (s.val().length > 0 && s.val() != s.attr("data-val")
              ? r.findLocationByAddress(s.val(), t)
              : e(null));
      }
      function o() {
        var e;
        0 == ORLEN.filters.getDistance()
          ? ((e = {
              gasStationType: ORLEN.filters.get("stations"),
              services:
                ORLEN.filters.get("services") +
                (ORLEN.filters.get("services") &&
                ORLEN.filters.get("facilities")
                  ? ";"
                  : "") +
                ORLEN.filters.get("facilities"),
              tags: s.val(),
              polyline: "",
              keyWords: "",
              food: ORLEN.filters.get("food"),
              cards: ORLEN.filters.get("cards"),
              topN: ORLEN.vars.$maxLocations,
              automaticallyIncreaseDistanceRadius: !0,
            }),
            ORLEN.debug("Sreaching by tags"),
            ORLEN.requests.findPOI(e, n))
          : n({});
      }
      var i = ORLEN.requests,
        r = ORLEN.map,
        s = $("#_orlen_petrol_search_input"),
        a = s.siblings("select").first(),
        l = s.siblings("a").first();
      l.click(function (t) {
        return (
          t.preventDefault(),
          0 == a.val().length
            ? !1
            : (s.val($("option:selected", a).data("fulltext")),
              l.hide(),
              a.hide(),
              s.show(),
              void e(a.geolocalization))
        );
      }),
        a.change(function () {
          var e = $(this).val();
          return (
            e.length > 0 &&
              $(ORLEN.vars.markersToChoose).each(function (t, n) {
                return n.position.lat() + "|" + n.position.lng() == e
                  ? void google.maps.event.trigger(n, "click")
                  : void 0;
              }),
            !0
          );
        }),
        (a[0].disabled = !1),
        $("#_orlen_petrol_search_input").keyup(function (e) {
          var t = e.keyCode ? e.keyCode : e.which;
          13 === Number(t) &&
            $("#_orlen_petrol_search_button").trigger("click");
        }),
        $("#_orlen_petrol_search_button").click(function (e) {
          return (
            e.preventDefault(),
            s.siblings("select").is(":visible")
              ? !1
              : (r.clearMap(), r.centerMap(), void o())
          );
        });
    }
    function u(e) {
      var t, n, o, i, r, s;
      if (((s = e.Results), (r = e), 0 == s.length))
        return (
          ORLEN.message.showMessage("MESSAGE_STATION_NOT_FOUND"),
          ORLEN.structure.fade("hide"),
          !1
        );
      (ORLEN.vars.markersToChoose = []),
        ORLEN.message.clear(),
        null != ORLEN.vars.gpsPos &&
          (ORLEN.vars.gpsPos.lat() == ORLEN.vars.$defaultLocalization[0] &&
          ORLEN.vars.gpsPos.lng() == ORLEN.vars.$defaultLocalization[1]
            ? ORLEN.map.centerMap()
            : ((t = new google.maps.Marker({
                position: ORLEN.vars.gpsPos,
                map: ORLEN.map.map(),
                input: $("#_orlen_petrol_search_input"),
              })),
              (ORLEN.vars.gpsMarker = t),
              google.maps.event.addListener(t, "click", function () {
                "" != t.input.val() &&
                  t.input.attr("data-val") != t.input.val() &&
                  (ORLEN.vars.currentInfoWindow &&
                    ORLEN.vars.currentInfoWindow.close(),
                  (ORLEN.vars.currentInfoWindow = new google.maps.InfoWindow({
                    content: t.input.val(),
                  })),
                  ORLEN.vars.currentInfoWindow.open(ORLEN.map.map(), t));
              }),
              (!ORLEN.settings.newLookRedesign ||
                (ORLEN.settings.newLookRedesign &&
                  ORLEN.settings.isFindPetrolPath &&
                  !ORLEN.settings.isFindRoutePath)) &&
                (google.maps.event.trigger(t, "click"),
                ORLEN.map.map().setCenter(ORLEN.vars.gpsPos),
                ORLEN.map.map().setZoom(13))));
      for (n in s)
        (o = s[n]),
          ORLEN.domevents.drawPoint(
            new google.maps.LatLng(o.Latitude, o.Longitude),
            o,
          );
      ORLEN.map.markerClusterer().clearMarkers(),
        ORLEN.map.markerClusterer().setGridSize(60),
        ORLEN.map.markerClusterer().setMinimumClusterSize(2),
        ORLEN.vars.$polyline.length > 0 &&
          (ORLEN.map.markerClusterer().setGridSize(30),
          ORLEN.map.markerClusterer().setMinimumClusterSize(2)),
        ORLEN.map.markerClusterer().addMarkers(ORLEN.vars.markersToChoose),
        null != ORLEN.vars.gpsPos
          ? ORLEN.filters.getDistance() > 0
            ? ORLEN.structure.renderNearestGasStations(r)
            : ((i = {
                gasStationType: ORLEN.filters.get("stations"),
                services:
                  ORLEN.filters.get("services") +
                  (ORLEN.filters.get("services") &&
                  ORLEN.filters.get("facilities")
                    ? ";"
                    : "") +
                  ORLEN.filters.get("facilities"),
                tags: "",
                polyline: "",
                keyWords: "",
                food: ORLEN.filters.get("food"),
                cards: ORLEN.filters.get("cards"),
                point: ORLEN.vars.gpsPos.lat() + " " + ORLEN.vars.gpsPos.lng(),
                distance: 10,
                topN: ORLEN.vars.$maxLocations,
                automaticallyIncreaseDistanceRadius: !1,
              }),
              ORLEN.requests.findPOIDetails(
                i,
                ORLEN.structure.renderNearestGasStations,
              ))
          : ORLEN.structure.fade("hide"),
        ORLEN.settings.showGenericLink &&
          (ORLEN.structure.renderLink(),
          ORLEN.settings.newLookRedesign &&
            ORLEN.structure.countSelectedFilters()),
        ORLEN.settings.newLookRedesign &&
          setTimeout(function () {
            ORLEN.map.markerClusterer().repaint(),
              null == ORLEN.vars.gpsPos &&
                ORLEN.map.centerOnVisibleMarkers(ORLEN.vars.markersToChoose);
          }, 0);
    }
    function _(e, t) {
      var n;
      n = ORLEN.settings.newLookRedesign
        ? {
            url: ORLEN.icons.getNormalizedIcon(t.GasStationType),
            scaledSize: new google.maps.Size(36, 56),
          }
        : { url: ORLEN.icons.get(t.GasStationType) };
      var o = new google.maps.Marker({
        position: e,
        icon: n,
        map: ORLEN.map.map(),
        data: t,
      });
      ORLEN.vars.markersToChoose.push(o),
        google.maps.event.addListener(o, "click", function () {
          ORLEN.settings.newLookRedesign
            ? (ORLEN.map.map().setCenter(o.getPosition()),
              (ORLEN.vars.currentMarker = o),
              ORLEN.requests.getGasStation(o.data.Id))
            : (ORLEN.vars.currentInfoWindow &&
                ORLEN.vars.currentInfoWindow.close(),
              ORLEN.settings.newLook &&
                ORLEN.map.map().setCenter(o.getPosition()),
              (ORLEN.vars.currentInfoWindow = new google.maps.InfoWindow({})),
              (ORLEN.vars.currentMarker = o),
              ORLEN.requests.getRegionalizedGasStation({
                gasStationTemplate: ORLEN.vars.$template,
                gasStationId: o.data.Id,
              }));
        });
    }
    function g(e) {
      var t,
        n,
        o,
        i = [],
        r = [],
        s = [],
        a = ORLEN.helper.findOverrideImage(e.BrandTypeDictionaryId);
      $(e.MainServices).each(function (e, t) {
        r.push(t.Key);
      }),
        i.push(ORLEN.settings.infowindow),
        ORLEN.settings.newLook
          ? i.push(
              ORLEN.vars.$imagesURL +
                (a.status
                  ? a.name
                  : "icoGasStation" + e.BrandTypeDictionaryId + "-rect.svg"),
            )
          : i.push(
              ORLEN.vars.$imagesURL +
                (a.status
                  ? a.name
                  : "icoGasStation" + e.BrandTypeDictionaryId + ".png"),
            ),
        i.push(
          ORLEN.formatString(
            "{0}: {1}",
            ORLEN.message.getMessage("MESSAGE_STATION_NUMBER"),
            e.LocalId,
          ),
        ),
        ORLEN.settings.newLook
          ? (i.push(
              ORLEN.formatString(
                "{0} {1} {2}",
                ORLEN.message.getMessage("MESSAGE_STATION_STREET"),
                e.StreetAddress,
                e.StreetNumber,
              ),
            ),
            i.push(ORLEN.formatString("{0} {1}", e.PostalCode, e.City)))
          : i.push(
              ORLEN.formatString(
                "{0} {1} {2} {3} {4}",
                ORLEN.message.getMessage("MESSAGE_STATION_STREET"),
                e.StreetAddress,
                e.StreetNumber,
                e.PostalCode,
                e.City,
              ),
            ),
        i.push(
          ORLEN.formatString(
            "tel. {0} <br/> {1}: {2}",
            e.Phone,
            ORLEN.message.getMessage("MESSAGE_OPEN"),
            e.OpeningHours,
          ),
        ),
        $(ORLEN.vars.$mainFilters).each(function (e, t) {
          var n,
            o = -1 == $.inArray(t.id, r);
          (ORLEN.settings.hideUnavailableServices && o) ||
            (o
              ? ORLEN.settings.newLook || (n = "icoGasStationSmallGray")
              : (n = ORLEN.settings.newLook
                  ? "icoGasStation"
                  : "icoGasStationSmall"),
            ORLEN.settings.newLook
              ? n &&
                s.push(
                  '<img src="' +
                    ORLEN.vars.$imagesURL +
                    n +
                    t.id +
                    '.svg" alt="' +
                    t.name +
                    '" />',
                )
              : s.push(
                  '<img src="' +
                    ORLEN.vars.$imagesURL +
                    n +
                    t.id +
                    '.png" alt="' +
                    t.name +
                    '" style="margin-left: 2px;" />',
                ));
        }),
        i.push(s.join("")),
        (o = ORLEN.helper.getCurrentStateParams()),
        (o.gs = e.Id),
        (t = {
          class: "_orlen_petrol_link _orlen_petrol_choose",
          href: "#",
          "data-localid": e.LocalId,
          onclick:
            'ORLEN.settings.clickMarkerCallback($(this).data("localid"), $(this).closest(".infowindow")); return false;',
        }),
        (n = {
          class: "_orlen_petrol_link",
          href: "#",
          "data-localid": e.Id,
          onclick:
            'ORLEN.requests.getGasStation($(this).data("localid")); return false;',
        }),
        i.push(
          "function" == typeof ORLEN.settings.clickMarkerCallback
            ? $("<a>", t)
                .text(ORLEN.message.getMessage("MESSAGE_CHOOSE") + " »")
                .prop("outerHTML")
            : "",
        ),
        ORLEN.settings.newLook
          ? i.push(
              $("<a>", n)
                .text(ORLEN.message.getMessage("MESSAGE_MORE__NEW"))
                .prop("outerHTML"),
            )
          : i.push(
              $("<a>", n)
                .text(ORLEN.message.getMessage("MESSAGE_MORE") + " »")
                .prop("outerHTML"),
            ),
        i.push(e.GasStationTypeName),
        ORLEN.vars.currentInfoWindow.setContent(
          ORLEN.formatString.apply(this, i),
        ),
        ORLEN.vars.currentInfoWindow.open(
          ORLEN.map.map(),
          ORLEN.vars.currentMarker,
        ),
        ORLEN.domevents.updateTextColor();
    }
    function h(e) {
      var t,
        n = "",
        o = {},
        i = function (e, t) {
          var n = (o[e] = []);
          $.each(t, function () {
            "main" === e
              ? n.push(
                  '<li><img alt="' +
                    this.Value +
                    '" src="' +
                    ORLEN.vars.$imagesURL +
                    "icoGasStation" +
                    this.Key +
                    '.svg" /></li>',
                )
              : (ORLEN.settings.newLookRedesign && "cards" === e) ||
                  (ORLEN.settings.newLookRedesign && "gas" === e)
                ? n.push(
                    '<li><img alt="' +
                      this.Value +
                      '" src="' +
                      ORLEN.vars.$imagesURL +
                      "ico-" +
                      this.Key +
                      '.png"><span class="_orlen_details__list-title">' +
                      this.Value +
                      "</span></li>",
                  )
                : n.push("<li>" + this.Value + "</li>");
          });
        },
        r = function (e, t) {
          return e.length ? "<h4>" + t + "</h4>" + e.join("") : "";
        };
      if (ORLEN.settings.newLookRedesign || ORLEN.settings.newLook) {
        var s = "",
          a = "",
          l =
            "https://www.google.com/maps/dir/?api=1&origin=" +
            (null !== ORLEN.vars.gpsPos
              ? ORLEN.vars.gpsPos.lat() + "," + ORLEN.vars.gpsPos.lng()
              : "Polska") +
            "&destination=" +
            e.Latitude +
            "," +
            e.Longitude +
            "&travelmode=driving";
        ORLEN.settings.newLookRedesign
          ? ((s = "STATION_FULL_INFO__REDESIGN"),
            (a = ORLEN.vars.$imagesURL + "orlen_logo.svg"))
          : ((s = "STATION_FULL_INFO__NEW"),
            (a =
              ORLEN.vars.$imagesURL +
              "icoGasStation" +
              e.BrandTypeDictionaryId +
              ".svg")),
          i("food", e.Food),
          i("gas", e.Gas),
          i("facilities", e.Facilities),
          i("services", e.Services),
          i("cards", e.Cards),
          i("main", e.MainServices),
          (t = $("._orlen_details")),
          (n = ORLEN.formatString(
            ORLEN.message.getMessage(s),
            e.LocalId,
            a,
            e.BrandTypeName,
            e.StreetAddress + " " + e.StreetNumber,
            e.PostalCode,
            e.City,
            e.Country,
            e.Phone,
            e.Latitude,
            e.Longitude,
            r(o.food, ORLEN.message.getMessage("MESSAGE_FILTERS_FOOD_NEW")),
            r(o.gas, ORLEN.message.getMessage("MESSAGE_FILTERS_GAS")),
            r(
              o.facilities,
              ORLEN.message.getMessage("MESSAGE_FILTERS_FACILITIES"),
            ),
            r(o.services, ORLEN.message.getMessage("MESSAGE_FILTERS_SERVICES")),
            r(o.cards, ORLEN.message.getMessage("MESSAGE_FILTERS_CARDS")),
            o.main.join(""),
            e.OpeningHours,
            l,
          )),
          t.html(n),
          t.is(":hidden") && t.addClass("visible");
        var c = null,
          d = null;
        ORLEN.settings.newLookRedesign &&
          ((d = $("._orlen_petrol_column-result")),
          (c = d.scrollTop()),
          d.addClass("_orlen_petrol_column-result--overflow").scrollTop(0)),
          $(".close__details").on("click", function (e) {
            return (
              t.removeClass("visible"),
              null !== c &&
                null !== d &&
                ORLEN.settings.newLookRedesign &&
                d
                  .removeClass("_orlen_petrol_column-result--overflow")
                  .scrollTop(c),
              e.preventDefault(),
              !1
            );
          });
      } else
        i("gas", e.Gas),
          i("facilities", e.Facilities),
          i("services", e.Services),
          i("food", e.Food),
          i("cards", e.Cards),
          i("main", e.MainServices),
          (n = ORLEN.formatString(
            ORLEN.message.getMessage("STATION_FULL_INFO"),
            e.LocalId,
            ORLEN.vars.$imagesURL +
              "icoGasStation" +
              e.BrandTypeDictionaryId +
              ".png",
            e.BrandTypeName,
            e.StreetAddress + " " + e.StreetNumber,
            e.PostalCode,
            e.City,
            e.Country,
            e.Phone,
            e.Latitude,
            e.Longitude,
            o.gas.join(""),
            o.facilities.join(""),
            o.services.join(""),
            o.food.join(""),
            o.cards.join(""),
            "&key=" + ORLEN.vars.$googleKey,
            e.OpeningHours,
          )),
          $.orlenFancybox(n, {
            minWidth: 860,
            height: 580,
            autoScale: !1,
            overlayColor: "#000",
            centerOnScroll: !0,
          });
    }
    function f() {
      function e() {
        var e = "A";
        i.find(".circle").each(function () {
          ORLEN.settings.newLookRedesign
            ? $(this).html(
                '<img src="' +
                  ORLEN.vars.$imagesURL +
                  e +
                  '.svg" alt="' +
                  e +
                  '"/>',
              )
            : $(this).text(e),
            (e = String.fromCharCode(((e.charCodeAt(0) + 1 - 65) % 25) + 65));
        });
      }
      var t = $("#_orlen_petrol_route_from_input"),
        n = $("#_orlen_petrol_route_to_input"),
        o = $("#_orlen_petrol__add_route_point"),
        i = $("._orlen_way");
      ORLEN.settings.newLookRedesign && e(),
        o.click(function () {
          var t, n;
          return $('input[name^="_orlen_petrol_route_point_input"]').length >
            ORLEN.vars.$maxWaypoints
            ? !1
            : (ORLEN.settings.newLook
                ? ((n = $(".add--field").last()),
                  ($fleld = $(".add--field").first().clone()),
                  $fleld.removeAttr("style"),
                  ORLEN.settings.newLookRedesign
                    ? $fleld.prepend(
                        '<div class="circle _orlen_alphabet_letter" />',
                      )
                    : $fleld.prepend('<div class="circle" />'),
                  n.after($fleld),
                  e(),
                  o.toggle($(".add--field").length <= ORLEN.vars.$maxWaypoints))
                : ((n = $("#_orlen_petrol_route_points div:last")),
                  (t = $('input[name^="_orlen_petrol_route_point_input"]:eq(0)')
                    .parent()
                    .html()),
                  n.after("<div>" + t + "</div>")),
              !1);
        }),
        $("#_orlen_petrol_route_points").delegate(
          "a._orlen_petrol_link",
          "click",
          function () {
            var t = $(this).parent();
            t.find(".circle").text();
            return (
              t.remove(),
              ORLEN.settings.newLook &&
                (e(),
                o.toggle(
                  $(".add--field").length - 1 <= ORLEN.vars.$maxWaypoints,
                )),
              !1
            );
          },
        ),
        $("#_orlen_route_find").delegate("select", "change", function () {
          var e = $(this).val();
          return (
            "" != e &&
              $(ORLEN.vars.markersToChoose).each(function (t, n) {
                return n.locationCoordinates == e
                  ? void google.maps.event.trigger(n, "click")
                  : void 0;
              }),
            !0
          );
        }),
        $("#_orlen_route_find").delegate(
          "a._orlen_petrol_button",
          "click",
          function () {
            var e, t;
            return "_orlen_petrol_route_search_button" != $(this).attr("id")
              ? ((e = $(this).parent().find("select")),
                "" != e.val() &&
                  ((t = e.find("option:selected").data("fulltext")),
                  e.remove(),
                  $(this).parent().find("input").val(t).show(),
                  $(this).hide(),
                  $(this).parent().find("a.js-remove-waypoint-button").remove(),
                  $("#_orlen_petrol_route_search_button").trigger("click")),
                !1)
              : void 0;
          },
        ),
        $("#_orlen_petrol_geosearch_button").click(function (e) {
          function t(e) {
            switch (e.code) {
              case e.PERMISSION_DENIED:
                ORLEN.debug(
                  "Użytkownik nie wyraził zgody na udostępnienie położenia",
                );
                break;
              case e.POSITION_UNAVAILABLE:
                ORLEN.debug("Dane o położeniu niedostępne");
                break;
              case e.TIMEOUT:
                ORLEN.debug("Przekroczono czas odpowiedzi serwera");
            }
          }
          e.preventDefault(),
            navigator.geolocation.getCurrentPosition(function (e) {
              var t;
              ORLEN.map.centerMap(),
                ORLEN.map.clearMap(),
                (ORLEN.vars.gpsPos = new google.maps.LatLng(
                  e.coords.latitude,
                  e.coords.longitude,
                )),
                (t = {
                  gasStationType: ORLEN.filters.get("stations"),
                  services:
                    ORLEN.filters.get("services") +
                    (ORLEN.filters.get("services") &&
                    ORLEN.filters.get("facilities")
                      ? ";"
                      : "") +
                    ORLEN.filters.get("facilities"),
                  tags: "",
                  polyline: "",
                  keyWords: "",
                  food: ORLEN.filters.get("food"),
                  cards: ORLEN.filters.get("cards"),
                  point:
                    ORLEN.vars.gpsPos.lat() + " " + ORLEN.vars.gpsPos.lng(),
                  distance: ORLEN.filters.getDistance(),
                  topN: ORLEN.vars.$maxLocations,
                  automaticallyIncreaseDistanceRadius: !0,
                }),
                ORLEN.filters.getDistance() > 0
                  ? ORLEN.requests.findPOIDetails(t)
                  : ORLEN.requests.findPOI(t);
            }, t);
        }),
        $("#_orlen_petrol_route_search_button").click(function (e) {
          var o,
            i,
            r,
            s = [];
          if (
            (e.stopPropagation(),
            $("#_orlen_route_find").find("select").length > 0)
          )
            return !1;
          if (
            (ORLEN.map.centerMap(),
            ORLEN.map.clearMap(),
            (ORLEN.vars.waypointsTable = new Array()),
            (ORLEN.vars.waypointsIndex = 0),
            "" == t.val() || "" == n.val())
          )
            return !1;
          if (t.val() == t.attr("data-val") || n.val() == n.attr("data-val"))
            return !1;
          if (
            ((i = !0),
            $('input[name^="_orlen_petrol_route_point_input"]').each(
              function (e) {
                e > 0 && $(this).val() == $(this).attr("data-val") && (i = !1);
              },
            ),
            !i)
          )
            return !1;
          if (
            ((ORLEN.vars.waypointsTable[0] = t.val()),
            (o = 1),
            $('input[name^="_orlen_petrol_route_point_input"]').each(
              function (e) {
                "" != $(this).val() &&
                  e > 0 &&
                  ((ORLEN.vars.waypointsTable[o] = $(this).val()), o++);
              },
            ),
            (ORLEN.vars.waypointsTable[o] = n.val()),
            ORLEN.structure.fade("show"),
            ORLEN.settings.newLookRedesign &&
              ORLEN.vars.waypointsTable.length >= 2)
          ) {
            var a = $("._orlen_way"),
              l = $("._orlen_rendered_way"),
              c = l.children("._orlen_rendered_way-list"),
              p = l.find("._orlen_rendered_way-external"),
              u = "",
              _ = [];
            a.hide(),
              l.show(),
              ORLEN.vars.waypointsTable.forEach(function (e, t) {
                var n = e.charAt(0).toUpperCase() + e.toLowerCase().slice(1),
                  o = ORLEN.vars.alphabet[t];
                u +=
                  '<li data-letter="' +
                  ORLEN.vars.alphabet[t] +
                  '"><i class="_orlen_alphabet_letter"><img src="' +
                  ORLEN.vars.$imagesURL +
                  o +
                  '.svg" alt="' +
                  o +
                  '"/></i><p><span>' +
                  n +
                  "</span></p></li>";
              }),
              c.html(u),
              _.push("origin=" + ORLEN.vars.waypointsTable[0]),
              _.push(
                "destination=" +
                  ORLEN.vars.waypointsTable[
                    ORLEN.vars.waypointsTable.length - 1
                  ],
              ),
              _.push("travelmode=driving"),
              _.push(
                "waypoints=" + ORLEN.vars.waypointsTable.slice(1, -1).join("|"),
              ),
              p.attr(
                "href",
                "https://www.google.com/maps/dir/?api=1&" +
                  decodeURIComponent(_.join("&")),
              ),
              c.off("click").on("click", function () {
                a.show(), l.hide();
              });
          }
          return (
            (r = function (e) {
              var o, i, a, l, c;
              return (
                s.push(e),
                s.length === ORLEN.vars.waypointsTable.length &&
                  ORLEN.settings.newLookRedesign &&
                  (ORLEN.vars.gpsPos = s[0][0].geometry.location),
                0 == e.length
                  ? (ORLEN.message.showMessage("MESSAGE_ROUTE_NOT_FOUND"),
                    ORLEN.structure.fade("hide"),
                    !1)
                  : 1 != e.length
                    ? (0 == ORLEN.vars.waypointsIndex
                        ? (i = t)
                        : ORLEN.vars.waypointsIndex ==
                            ORLEN.vars.waypointsTable.length - 1
                          ? (i = n)
                          : ((a = ORLEN.vars.waypointsIndex),
                            (i = $(
                              'input[name^="_orlen_petrol_route_point_input"]:eq(' +
                                a +
                                ")",
                            )),
                            0 ==
                              i.parent().find("a.js-remove-waypoint-button")
                                .length &&
                              i.after(
                                '<a class="_orlen_petrol_button js-remove-waypoint-button" href="">wybierz</a>',
                              )),
                      (c = !1),
                      (o = i.attr("data-position")),
                      ORLEN.structure.fade("hide"),
                      "" != o &&
                        $(e).each(function (e, t) {
                          var n =
                            t.geometry.location.lat() +
                            "|" +
                            t.geometry.location.lng();
                          return o == n
                            ? (i.parent().find("a._orlen_petrol_button").hide(),
                              i
                                .parent()
                                .find("a.js-remove-waypoint-button")
                                .remove(),
                              i.parent().find("select").remove(),
                              i.show(),
                              (ORLEN.vars.waypointsTable[
                                ORLEN.vars.waypointsIndex
                              ] = t.geometry.location),
                              ORLEN.vars.waypointsIndex++,
                              ORLEN.vars.waypointsIndex <
                              ORLEN.vars.waypointsTable.length
                                ? ORLEN.map.findLocationByAddress(
                                    ORLEN.vars.waypointsTable[
                                      ORLEN.vars.waypointsIndex
                                    ],
                                    r,
                                  )
                                : ORLEN.map.generateRoute(
                                    ORLEN.vars.waypointsTable,
                                  ),
                              (c = !0),
                              !1)
                            : void 0;
                        }),
                      c
                        ? !1
                        : ((l = $("<select />")),
                          i.parent().find("a._orlen_petrol_button").show(),
                          i.parent().find("select").remove(),
                          i.hide(),
                          $("<option>", {
                            value: "",
                            text: ORLEN.message.getMessage(
                              "MESSAGE_SELECT_LOCALIZATION",
                            ),
                          }).appendTo(l),
                          d(e, l),
                          l.insertAfter(i),
                          !1))
                    : ((ORLEN.vars.waypointsTable[ORLEN.vars.waypointsIndex] =
                        e[0].geometry.location),
                      ORLEN.vars.waypointsIndex++,
                      ORLEN.vars.waypointsIndex <
                      ORLEN.vars.waypointsTable.length
                        ? ORLEN.map.findLocationByAddress(
                            ORLEN.vars.waypointsTable[
                              ORLEN.vars.waypointsIndex
                            ],
                            r,
                          )
                        : ORLEN.map.generateRoute(ORLEN.vars.waypointsTable),
                      void 0)
              );
            }),
            ORLEN.map.findLocationByAddress(
              ORLEN.vars.waypointsTable[ORLEN.vars.waypointsIndex],
              r,
            ),
            ORLEN.settings.newLook &&
              $("#_orlen_response_way").addClass("opened"),
            !1
          );
        });
    }
    function v(e) {
      var t,
        n,
        o,
        i = 0,
        r = 0;
      (t = new Array()),
        $(e).length < 2 ||
          $(e).each(function () {
            if (
              ((n = $(this)), n.height("auto"), (o = n.position().top), r != o)
            ) {
              for (var e = 0, s = t.length; s > e; e++) t[e].height(i);
              (t.length = 0), (r = o), (i = n.height()), t.push(n);
            } else t.push(n), (i = i < n.height() ? n.height() : i);
            for (e = 0; e < t.length; e++) t[e].height(i);
          });
    }
    return {
      updateTextColor: e,
      addClearInputOnFocus: t,
      addCheckboxDistanceEvent: n,
      initTabs: r,
      initCheckboxes: s,
      initMainFiltersEvents: a,
      initResetFiltersEvent: l,
      initSearchButton: p,
      initDetailsToggle: c,
      initCustomization: i,
      equalheight: v,
      addSearchRouteEvents: f,
      drawMap: u,
      drawPoint: _,
      showGasStationInfoWindow: g,
      showGasStationFullInfo: h,
    };
  })()),
  (ORLEN.parse = (function () {
    function e(e) {
      var t = e;
      (u.$sessionid = t.SessionId),
        (u.$googleKey = t.GoogleKey),
        $(t.Criterias).each(function (e, t) {
          u.isFiltersNarrowed
            ? -1 == $.inArray(t, _.filters) && u.$filters.push(t)
            : u.$filters.push(t);
        }),
        $(t.Network).each(function (e, t) {
          u.isNetworkNarrowed
            ? -1 == $.inArray(t.Id, _.network) && u.$network.push(t.Id)
            : u.$network.push(t.Id);
        }),
        d.loadDom(t.HtmlTemplate),
        d.loadGoogleMapAPI(),
        p.initTabs(),
        p.initCustomization(_.customization),
        p.initDetailsToggle(),
        p.initSearchButton(),
        p.addSearchRouteEvents(),
        p.addClearInputOnFocus(),
        p.addCheckboxDistanceEvent(),
        ORLEN.requests
          .getRegionalizedMainCategories({
            gasStationTemplate: ORLEN.vars.$template,
          })
          .then(function () {
            ORLEN.settings.newLookRedesign &&
              0 === Object.keys(ORLEN.structure.searchToObject()).length &&
              setTimeout(function () {
                $("#_orlen_petrol_search_button").trigger("click");
              }, 1e3);
          }),
        "function" == typeof ORLEN.settings.afterInit &&
          ORLEN.settings.afterInit();
    }
    function t(e) {
      d.loadBrands(e), o();
    }
    function n(e) {
      d.loadMainFilters(e),
        p.initCheckboxes(),
        ORLEN.settings.newLookRedesign &&
          (p.initMainFiltersEvents(), p.initResetFiltersEvent()),
        ORLEN.settings.newLook
          ? ORLEN.requests.getRegionalizedDictionaryItems(
              u.$filterGroupsNew.pop(),
            )
          : ORLEN.requests.getRegionalizedDictionaryItems(
              u.$filterGroups.pop(),
            );
    }
    function o() {
      var e, t;
      (t = !1),
        (e = (function (e) {
          var t = {};
          return (
            (e = e.slice(1)),
            $(e.split("&")).each(function (e, n) {
              (n = n.split("=")),
                1 == n.length
                  ? (t[decodeURIComponent(n[0])] = null)
                  : (t[decodeURIComponent(n[0])] = decodeURIComponent(
                      n[1].replace("+", "%20"),
                    ));
            }),
            t
          );
        })(location.search)),
        (e = $.extend(e, ORLEN.settings.query)),
        $(["kw", "from", "to", "s", "wp", "dst"]).each(function (n, o) {
          if (e.hasOwnProperty(o)) {
            switch (o) {
              case "kw":
                0 != e[o].length &&
                  (ORLEN.filters.setInput("search", e[o]),
                  ORLEN.filters.setInput("from", e[o]));
                break;
              case "from":
                0 != e[o].length &&
                  (ORLEN.filters.setInput("from", e[o]),
                  ORLEN.filters.setInput("search", e[o]));
                break;
              case "to":
                0 != e[o].length && ORLEN.filters.setInput("to", e[o]);
                break;
              case "s":
                ORLEN.filters.clear(),
                  $(e[o].split(";")).each(function (e, t) {
                    ORLEN.filters.set(t, !0);
                  });
                break;
              case "wp":
                0 != e[o].length &&
                  $(e[o].split(";")).each(function (e, t) {
                    ORLEN.filters.addWayPoint(t);
                  });
                break;
              case "dst":
                ORLEN.filters.setDistance(e[o]);
            }
            t = !0;
          }
        }),
        t &&
          ("undefined" != typeof e.to && null !== e.to && e.to.length > 0
            ? ($("#_orlen_tabs_nav")
                .find('a[href="_orlen_route_find"]')
                .trigger("click"),
              $("#_orlen_petrol_route_search_button").trigger("click"))
            : $("#_orlen_petrol_search_button").trigger("click"));
    }
    function i(e) {
      ORLEN.settings.newLook
        ? d.loadFilterDetails(e, "Food_new")
        : d.loadFilterDetails(e, "Food");
    }
    function r(e) {
      d.loadFilterDetails(e, "Services");
    }
    function s(e) {
      d.loadFilterDetails(e, "Cards");
    }
    function a(e) {
      d.loadFilterDetails(e, "Facilities");
    }
    function l(e) {
      d.loadFilterDetails(e, "Gas");
    }
    function c(e) {
      ORLEN.debug(e), d.fade("hide");
    }
    var d = ORLEN.structure,
      p = ORLEN.domevents,
      u = ORLEN.vars,
      _ = ORLEN.settings;
    return {
      init: e,
      initNetwork: t,
      initFilters: n,
      initFilterDetailsServices: r,
      initFilterDetailsFood: i,
      initFilterDetailsCards: s,
      initFilterDetailsFacilities: a,
      initFilterDetailsGas: l,
      dump: c,
    };
  })()),
  (ORLEN.map = (function () {
    function e() {
      return p;
    }
    function t() {
      return _;
    }
    function n() {
      return u;
    }
    function o() {
      $("#_orlen_response, ._orlen_petrol_poi").html(""),
        $("#_orlen_response, ._orlen_petrol_poi-outer").removeClass(
          "orlen_result-rendered",
        ),
        u.setMap(p),
        ORLEN.settings.newLook &&
          $(".route_find").hasClass("_orlen_active") &&
          $("#_orlen_response_way .custom-scroll").html(""),
        u.setDirections({ routes: [] }),
        (ORLEN.vars.$polyline = []),
        ORLEN.vars.currentInfoWindow && ORLEN.vars.currentInfoWindow.close(),
        _.clearMarkers();
      for (var e = 0, t = ORLEN.vars.markersToChoose.length; t > e; e++)
        ORLEN.vars.markersToChoose[e].setMap(null);
      (ORLEN.vars.markersToChoose = []),
        null != ORLEN.vars.gpsMarker &&
          "undefined" != typeof ORLEN.vars.gpsMarker &&
          "undefined" != typeof ORLEN.vars.gpsMarker.getMap &&
          ORLEN.vars.gpsMarker.setMap(null),
        (ORLEN.vars.gpsPos = null);
    }
    function i() {
      var e,
        t = ORLEN.filters.get("stations"),
        n = $("#_orlen_petrol_search_input"),
        o = !1,
        i = null;
      ("" == n.val() || n.attr("data-val") == n.val()) &&
        ((t = $("#_orlen_petrol_stations").find(
          'input[type="checkbox"]:checked',
        )),
        $(t).each(function () {
          null == i || i == $(this).attr("data-brand-contry")
            ? ((o = !0),
              (i = $(this).attr("data-brand-contry")),
              (e = $(this).attr("data-brand-contry-id")))
            : (o = !1);
        })),
        o && null != i
          ? ORLEN.map.findLocationByAddress(i, function (t) {
              ORLEN.debug(t),
                1385 == e
                  ? (p.setCenter(new google.maps.LatLng(49.936608, 15.57312)),
                    p.setZoom(7),
                    ORLEN.map.markerClusterer().repaint())
                  : 1 == t.length &&
                    (ORLEN.debug("Center map by country"),
                    ORLEN.map.centerMapByCountry(t[0].geometry.location, 6),
                    ORLEN.map.markerClusterer().repaint());
            })
          : p.setCenter(
              new google.maps.LatLng(
                ORLEN.vars.$defaultLocalization[0],
                ORLEN.vars.$defaultLocalization[1],
              ),
            );
    }
    function r(e, t) {
      p.setCenter(new google.maps.LatLng(e.lat(), e.lng())), p.setZoom(t);
    }
    function s(e) {
      var t = new google.maps.LatLngBounds(),
        n = 0;
      for (n = 0; n < e.length; n++) t.extend(e[n].getPosition());
      p.setCenter(t.getCenter()), p.fitBounds(t);
    }
    function a() {
      google.maps.event.trigger(ORLEN.map.map(), "resize"),
        ORLEN.map.centerMap();
    }
    function l() {
      var e,
        t = {
          center: new google.maps.LatLng(
            ORLEN.vars.$defaultLocalization[0],
            ORLEN.vars.$defaultLocalization[1],
          ),
          zoom: 6,
          mapTypeControlOptions: {
            style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
            position: google.maps.ControlPosition.TOP_RIGHT,
          },
          travelMode: google.maps.TravelMode.DRIVING,
        };
      (p = new google.maps.Map(
        document.getElementById("_orlen_petrol_map_canvas"),
        t,
      )),
        (u = new google.maps.DirectionsRenderer());
      var n = document.getElementById(
        ORLEN.settings.newLookRedesign
          ? "_orlen_response_route"
          : "_orlen_response",
      );
      u.setPanel(n),
        ORLEN.settings.newLook &&
          $(".route_find").hasClass("_orlen_active") &&
          u.setPanel(document.getElementById("_orlen_response_way__content")),
        u.setMap(p),
        (e = {
          calculator: function (e) {
            var t;
            switch (e.stationsSum_) {
              case 1:
                t = 0;
                break;
              case 2:
                t = 1;
                break;
              case 3:
              case 6:
              case 7:
                t = 2;
                break;
              case 4:
              case 5:
                t = 3;
                break;
              case 8:
                t = 4;
                break;
              case 16:
                t = 5;
                break;
              case 32:
                t = 6;
                break;
              case 48:
                t = 7;
                break;
              case 64:
                t = 8;
                break;
              case 128:
                t = 9;
                break;
              case 192:
                t = 10;
                break;
              default:
                t = 0;
            }
            return {
              text: "",
              index: t + 1,
              title:
                ORLEN.message.getMessage("MESSAGE_CLUSTER_TOOLTIP") +
                e.markers_.length,
            };
          },
          styles: [
            {
              height: 40,
              width: 35,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleOrlen2.gif",
            },
            {
              height: 40,
              width: 35,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleBliska2.gif",
            },
            {
              height: 40,
              width: 75,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleOrlenBliska2.gif",
            },
            {
              height: 40,
              width: 75,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleOrlenStopCafe2.gif",
            },
            {
              height: 40,
              width: 75,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleStar.gif",
            },
            {
              height: 40,
              width: 75,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleOrlenLietuva.gif",
            },
            {
              height: 40,
              width: 75,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleVentus.gif",
            },
            {
              height: 40,
              width: 75,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleOrlenLVentus.gif",
            },
            {
              height: 40,
              width: 75,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleBenzina.gif",
            },
            {
              height: 40,
              width: 75,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleBenzinaPlus.gif",
            },
            {
              height: 40,
              width: 75,
              anchor: [25, 0],
              url: ORLEN.vars.$imagesURL + "icoGoogleBenzinaBenzinaPlus.gif",
            },
          ],
        }),
        ORLEN.settings.newLookRedesign &&
          (e = {
            calculator: function (e) {
              return {
                text: e.markers_.length,
                index: 0,
                title:
                  ORLEN.message.getMessage("MESSAGE_CLUSTER_TOOLTIP") +
                  e.markers_.length,
              };
            },
            styles: [
              {
                height: 50,
                width: 50,
                url: ORLEN.vars.$imagesURL + "maps-cluster.svg",
                textColor: "#ffffff",
                fontWeight: "bold",
                textSize: 16,
              },
            ],
            ignoreHidden: !0,
          }),
        (_ = new O_MarkerClusterer(p, {}, e));
    }
    function c(e, t) {
      var n = new google.maps.Geocoder(),
        o = { address: e };
      n.geocode(o, function (e, n) {
        n == google.maps.GeocoderStatus.OK
          ? t(e)
          : (ORLEN.debug(
              "Geocode was not successful for the following reason: " + n,
            ),
            t([]));
      });
    }
    function d(e) {
      var t, n, o, i, r, s, a;
      return e.length < 2
        ? (ORLEN.debug("Too short waypoints table" + e.length), !1)
        : ((t = new google.maps.DirectionsService()),
          (o = e[0]),
          (a = e[e.length - 1]),
          (n = []),
          e.length > 2 &&
            (ORLEN.debug("Slicing waypoints table"),
            (i = e),
            i.splice(0, 1),
            i.splice(-1, 1),
            $(i).each(function (e, t) {
              (s = { location: t, stopover: !0 }), (n[e] = s);
            })),
          (r = {
            origin: o,
            destination: a,
            waypoints: n,
            travelMode: google.maps.TravelMode.DRIVING,
          }),
          void t.route(r, function (e, t) {
            return t == google.maps.DirectionsStatus.OK && e.routes[0]
              ? (ORLEN.message.clear(),
                $("#_orlen_route_find")
                  .find("input")
                  .each(function () {
                    $(this).removeAttr("data-position");
                  }),
                google.maps.event.addListener(
                  ORLEN.map.directionsRenderer(),
                  "directions_changed",
                  function () {
                    var e;
                    0 !=
                      ORLEN.map.directionsRenderer().getDirections().routes
                        .length &&
                      ((e = ORLEN.map.directionsRenderer().getDirections()
                        .routes[0].overview_path),
                      (ORLEN.vars.$polyline = e.slice(0)),
                      ORLEN.searchByRoute.findGasStationsByRoute(e));
                  },
                ),
                void ORLEN.map.directionsRenderer().setDirections(e))
              : (ORLEN.debug("Cannot draw map route: reason " + t),
                google.maps.GeocoderStatus.ZERO_RESULTS == t &&
                  (ORLEN.message.showMessage("MESSAGE_ROUTE_NOT_FOUND"),
                  ORLEN.structure.fade("hide")),
                !1);
          }));
    }
    var p, u, _;
    return {
      init: l,
      clearMap: o,
      centerMap: i,
      centerMapByCountry: r,
      map: e,
      refreshMap: a,
      markerClusterer: t,
      generateRoute: d,
      findLocationByAddress: c,
      directionsRenderer: n,
      centerOnVisibleMarkers: s,
    };
  })()),
  (ORLEN.requests = (function () {
    function e(e, t, n) {
      var o, i;
      return (
        (o = "doNotHideLoader" in t),
        delete t.doNotHideLoader,
        (i = $.extend(
          { key: _.key, format: "jsonp", languageCode: _.languageCode },
          t,
        )),
        null !== g.$sessionid && (i.sessionId = g.$sessionid),
        h.fade("show"),
        ORLEN.debug("Sending request " + e + " with params"),
        ORLEN.debug(i),
        $.ajax({
          url: g.$webserviceURL + "/" + e,
          data: i,
          dataType: "jsonp",
          jsonp: "callback",
          crossDomain: !0,
          cache: !1,
          success: function (e) {
            o || ORLEN.structure.fade("hide"),
              ORLEN.debug("Response from webservice "),
              ORLEN.debug(e),
              n(e);
          },
          timeout: 5e4,
          error: function (e, t) {
            ORLEN.debug(t), h.fade("hide");
          },
        })
      );
    }
    function t() {
      e("GetPluginBaseConfig", {}, ORLEN.parse.init);
    }
    function n(t, n) {
      "undefined" == typeof n && (n = ORLEN.domevents.drawMap),
        (t.doNotHideLoader = !0),
        e("FindPOI", t, n);
    }
    function o(t, n) {
      (t.doNotHideLoader = !0),
        "undefined" == typeof n && (n = ORLEN.domevents.drawMap),
        e("FindPOIDetails", t, n);
    }
    function i() {
      e("GetCountriesWithBrands", {}, ORLEN.parse.initNetwork);
    }
    function r(t) {
      var n;
      switch (t) {
        case "services":
          n = ORLEN.parse.initFilterDetailsServices;
          break;
        case "food":
          n = ORLEN.parse.initFilterDetailsFood;
          break;
        case "cards":
          n = ORLEN.parse.initFilterDetailsCards;
          break;
        case "facilities":
          n = ORLEN.parse.initFilterDetailsFacilities;
          break;
        case "gas":
          n = ORLEN.parse.initFilterDetailsGas;
      }
      "function" == typeof n &&
        e("GetRegionalizedDictionaryItems", { dictionary: t }, n);
    }
    function s(t) {
      return (
        ORLEN.settings.showFilters || $("#_orlen_promoted_filters").remove(),
        e("GetRegionalizedMainCategories", t, ORLEN.parse.initFilters)
      );
    }
    function a(t) {
      (t.doNotHideLoader = !0),
        e(
          "FindGasStationsPackageFirst",
          t,
          ORLEN.searchByRoute.findGasStationsPackageNextPolyLine,
        );
    }
    function l(t) {
      (t.doNotHideLoader = !0),
        e(
          "FindGasStationsPackageNextPolyLine",
          t,
          ORLEN.searchByRoute.findGasStationsPackageNextPolyLine,
        );
    }
    function c(t) {
      (t.doNotHideLoader = !0),
        e("FindGasStationsPackageGetResulat", t, ORLEN.domevents.drawMap);
    }
    function d(t) {
      (t.doNotHideLoader = !0),
        e(
          "FindGasStationsPackageGetResulatDetails",
          t,
          ORLEN.domevents.drawMap,
        );
    }
    function p(t) {
      e(
        "GetRegionalizedGasStation",
        t,
        ORLEN.domevents.showGasStationInfoWindow,
      );
    }
    function u(t) {
      var n = { gasStationId: t, gasStationTemplate: ORLEN.vars.$template };
      e("GetGasStation", n, ORLEN.domevents.showGasStationFullInfo);
    }
    var _ = ORLEN.settings,
      g = ORLEN.vars,
      h = ORLEN.structure;
    return {
      initRequest: t,
      getRegionalizedGasStation: p,
      findPOI: n,
      findPOIDetails: o,
      getCountriesWithBrands: i,
      findGasStationsPackageFirst: a,
      findGasStationsPackageNextPolyLine: l,
      findGasStationsPackageGetResulat: c,
      findGasStationsPackageGetResulatDetails: d,
      getRegionalizedMainCategories: s,
      getRegionalizedDictionaryItems: r,
      getGasStation: u,
    };
  })()),
  (ORLEN.init = function (e) {
    ORLEN.extend(ORLEN.settings, e),
      ORLEN.settings.isLocal &&
        ((ORLEN.vars.$webserviceURL = ORLEN.settings.$webserviceURL),
        (ORLEN.vars.$imagesURL = ORLEN.settings.$imagesURL),
        (ORLEN.vars.$mainCssFile = ORLEN.settings.$mainCssFile)),
      (ORLEN.vars.isFiltersNarrowed =
        "[object Array]" === Object.prototype.toString.call(e.filters)),
      (ORLEN.vars.isNetworkNarrowed =
        "[object Array]" === Object.prototype.toString.call(e.network)),
      "" !== ORLEN.settings.template &&
        (ORLEN.vars.$template = ORLEN.settings.template),
      ORLEN.requests.initRequest();
  }),
  (ORLEN.run = function () {
    ORLEN.structure.loadJquery() && ORLEN.startInit();
  }),
  ORLEN.run(),
  (O_ClusterIcon.prototype.onAdd = function () {
    var e,
      t,
      n = this;
    (this.div_ = document.createElement("div")),
      (this.div_.className = this.className_),
      this.visible_ && this.show(),
      this.getPanes().overlayMouseTarget.appendChild(this.div_),
      (this.boundsChangedListener_ = google.maps.event.addListener(
        this.getMap(),
        "bounds_changed",
        function () {
          t = e;
        },
      )),
      google.maps.event.addDomListener(this.div_, "mousedown", function () {
        (e = !0), (t = !1);
      }),
      google.maps.event.addDomListener(this.div_, "click", function (o) {
        if (((e = !1), !t)) {
          var i,
            r,
            s = n.cluster_.getMarkerClusterer();
          google.maps.event.trigger(s, "click", n.cluster_),
            google.maps.event.trigger(s, "clusterclick", n.cluster_),
            s.getZoomOnClick() &&
              ((r = s.getMaxZoom()),
              (i = n.cluster_.getBounds()),
              s.getMap().fitBounds(i),
              setTimeout(function () {
                s.getMap().fitBounds(i),
                  null !== r &&
                    s.getMap().getZoom() > r &&
                    s.getMap().setZoom(r + 1);
              }, 100)),
            (o.cancelBubble = !0),
            o.stopPropagation && o.stopPropagation();
        }
      }),
      google.maps.event.addDomListener(this.div_, "mouseover", function () {
        var e = n.cluster_.getMarkerClusterer();
        google.maps.event.trigger(e, "mouseover", n.cluster_);
      }),
      google.maps.event.addDomListener(this.div_, "mouseout", function () {
        var e = n.cluster_.getMarkerClusterer();
        google.maps.event.trigger(e, "mouseout", n.cluster_);
      });
  }),
  (O_ClusterIcon.prototype.onRemove = function () {
    this.div_ &&
      this.div_.parentNode &&
      (this.hide(),
      google.maps.event.removeListener(this.boundsChangedListener_),
      google.maps.event.clearInstanceListeners(this.div_),
      this.div_.parentNode.removeChild(this.div_),
      (this.div_ = null));
  }),
  (O_ClusterIcon.prototype.draw = function () {
    if (this.visible_) {
      var e = this.getPosFromLatLng_(this.center_);
      (this.div_.style.top = e.y + "px"), (this.div_.style.left = e.x + "px");
    }
  }),
  (O_ClusterIcon.prototype.hide = function () {
    this.div_ && (this.div_.style.display = "none"), (this.visible_ = !1);
  }),
  (O_ClusterIcon.prototype.show = function () {
    if (this.div_) {
      var e = "",
        t = this.backgroundPosition_.split(" "),
        n = parseInt(t[0].trim(), 10),
        o = parseInt(t[1].trim(), 10),
        i = this.getPosFromLatLng_(this.center_);
      (this.div_.style.cssText = this.createCss(i)),
        (e =
          "<img src='" +
          this.url_ +
          "' style='position: absolute; top: " +
          o +
          "px; left: " +
          n +
          "px; "),
        this.cluster_.getMarkerClusterer().enableRetinaIcons_ ||
          (e +=
            "clip: rect(" +
            -1 * o +
            "px, " +
            (-1 * n + this.width_) +
            "px, " +
            (-1 * o + this.height_) +
            "px, " +
            -1 * n +
            "px);"),
        (e += "'>"),
        (this.div_.innerHTML =
          e +
          "<div style='position: absolute;top: " +
          this.anchorText_[0] +
          "px;left: " +
          this.anchorText_[1] +
          "px;color: " +
          this.textColor_ +
          ";font-size: " +
          this.textSize_ +
          "px;font-family: " +
          this.fontFamily_ +
          ";font-weight: " +
          this.fontWeight_ +
          ";font-style: " +
          this.fontStyle_ +
          ";text-decoration: " +
          this.textDecoration_ +
          ";text-align: center;width: " +
          this.width_ +
          "px;line-height:" +
          this.height_ +
          "px;'>" +
          this.sums_.text +
          "</div>"),
        "undefined" == typeof this.sums_.title || "" === this.sums_.title
          ? (this.div_.title = this.cluster_.getMarkerClusterer().getTitle())
          : (this.div_.title = this.sums_.title),
        (this.div_.style.display = "");
    }
    this.visible_ = !0;
  }),
  (O_ClusterIcon.prototype.useStyle = function (e) {
    this.sums_ = e;
    var t = Math.max(0, e.index - 1);
    t = Math.min(this.styles_.length - 1, t);
    var n = this.styles_[t];
    (this.url_ = n.url),
      (this.height_ = n.height),
      (this.width_ = n.width),
      (this.anchorText_ = n.anchorText || [0, 0]),
      (this.anchorIcon_ = n.anchorIcon || [
        parseInt(this.height_ / 2, 10),
        parseInt(this.width_ / 2, 10),
      ]),
      (this.textColor_ = n.textColor || "black"),
      (this.textSize_ = n.textSize || 11),
      (this.textDecoration_ = n.textDecoration || "none"),
      (this.fontWeight_ = n.fontWeight || "bold"),
      (this.fontStyle_ = n.fontStyle || "normal"),
      (this.fontFamily_ = n.fontFamily || "Arial,sans-serif"),
      (this.backgroundPosition_ = n.backgroundPosition || "0 0");
  }),
  (O_ClusterIcon.prototype.setCenter = function (e) {
    this.center_ = e;
  }),
  (O_ClusterIcon.prototype.createCss = function (e) {
    var t = [];
    return (
      t.push("cursor: pointer;"),
      t.push("position: absolute; top: " + e.y + "px; left: " + e.x + "px;"),
      t.push("width: " + this.width_ + "px; height: " + this.height_ + "px;"),
      t.join("")
    );
  }),
  (O_ClusterIcon.prototype.getPosFromLatLng_ = function (e) {
    var t = this.getProjection().fromLatLngToDivPixel(e);
    return (
      (t.x -= this.anchorIcon_[1]),
      (t.y -= this.anchorIcon_[0]),
      (t.x = parseInt(t.x, 10)),
      (t.y = parseInt(t.y, 10)),
      t
    );
  }),
  (O_Cluster.prototype.getSize = function () {
    return this.markers_.length;
  }),
  (O_Cluster.prototype.getMarkers = function () {
    return this.markers_;
  }),
  (O_Cluster.prototype.getCenter = function () {
    return this.center_;
  }),
  (O_Cluster.prototype.getMap = function () {
    return this.map_;
  }),
  (O_Cluster.prototype.getMarkerClusterer = function () {
    return this.markerClusterer_;
  }),
  (O_Cluster.prototype.getBounds = function () {
    var e,
      t = new google.maps.LatLngBounds(this.center_, this.center_),
      n = this.getMarkers();
    for (e = 0; e < n.length; e++) t.extend(n[e].getPosition());
    return t;
  }),
  (O_Cluster.prototype.remove = function () {
    this.clusterIcon_.setMap(null), (this.markers_ = []), delete this.markers_;
  }),
  (O_Cluster.prototype.addMarker = function (e) {
    var t, n, o, i, r;
    if (this.isMarkerAlreadyAdded_(e)) return !1;
    for (r = e.data.GasStationType.split("-"), n = 0; n < r.length; n++)
      this.stationsSum_ =
        this.stationsSum_ | O_Stations.getPowerOf2(parseInt(r[n]));
    if (this.center_) {
      if (this.averageCenter_) {
        var s = this.markers_.length + 1,
          a = (this.center_.lat() * (s - 1) + e.getPosition().lat()) / s,
          l = (this.center_.lng() * (s - 1) + e.getPosition().lng()) / s;
        (this.center_ = new google.maps.LatLng(a, l)), this.calculateBounds_();
      }
    } else (this.center_ = e.getPosition()), this.calculateBounds_();
    if (
      ((e.isAdded = !0),
      this.markers_.push(e),
      (o = this.markers_.length),
      (i = this.markerClusterer_.getMaxZoom()),
      null !== i && this.map_.getZoom() > i)
    )
      e.getMap() !== this.map_ && e.setMap(this.map_);
    else if (o < this.minClusterSize_)
      e.getMap() !== this.map_ && e.setMap(this.map_);
    else if (o === this.minClusterSize_)
      for (t = 0; o > t; t++) this.markers_[t].setMap(null);
    else e.setMap(null);
    return this.updateIcon_(), !0;
  }),
  (O_Cluster.prototype.isMarkerInClusterBounds = function (e) {
    return this.bounds_.contains(e.getPosition());
  }),
  (O_Cluster.prototype.calculateBounds_ = function () {
    var e = new google.maps.LatLngBounds(this.center_, this.center_);
    this.bounds_ = this.markerClusterer_.getExtendedBounds(e);
  }),
  (O_Cluster.prototype.updateIcon_ = function () {
    var e = this.markers_.length,
      t = this.markerClusterer_.getMaxZoom();
    if (null !== t && this.map_.getZoom() > t)
      return void this.clusterIcon_.hide();
    if (e < this.minClusterSize_) return void this.clusterIcon_.hide();
    var n = this.markerClusterer_.getStyles().length,
      o = this.markerClusterer_.getCalculator()(this, n);
    this.clusterIcon_.setCenter(this.center_),
      this.clusterIcon_.useStyle(o),
      this.clusterIcon_.show();
  }),
  (O_Stations = (function () {
    function e(e) {
      var n,
        o = [
          t.ORLEN,
          t.BLISKA,
          t.CAFE,
          t.STAR,
          t.ORLENLTV,
          t.VENTUS,
          t.BENZINA,
          t.BENZINAPLUS,
        ];
      for (n = 0; n < o.length; n++) if (o[n] === e) return Math.pow(2, n);
      return !1;
    }
    var t = {
      ORLEN: 1345,
      BLISKA: 1346,
      CAFE: 1374,
      STAR: 1452,
      ORLENLTV: 1453,
      VENTUS: 1454,
      BENZINA: 1455,
      BENZINAPLUS: 1456,
    };
    return { getPowerOf2: e };
  })()),
  (O_Cluster.prototype.isMarkerAlreadyAdded_ = function (e) {
    var t;
    if (this.markers_.indexOf) return -1 !== this.markers_.indexOf(e);
    for (t = 0; t < this.markers_.length; t++)
      if (e === this.markers_[t]) return !0;
    return !1;
  }),
  (O_MarkerClusterer.prototype.onAdd = function () {
    var e = this;
    (this.activeMap_ = this.getMap()),
      (this.ready_ = !0),
      this.repaint(),
      (this.listeners_ = [
        google.maps.event.addListener(
          this.getMap(),
          "zoom_changed",
          function () {
            e.resetViewport_(!1),
              (this.getZoom() === (this.get("minZoom") || 0) ||
                this.getZoom() === this.get("maxZoom")) &&
                google.maps.event.trigger(this, "idle");
          },
        ),
        google.maps.event.addListener(this.getMap(), "idle", function () {
          e.redraw_();
        }),
      ]);
  }),
  (O_MarkerClusterer.prototype.onRemove = function () {
    var e;
    for (e = 0; e < this.markers_.length; e++)
      this.markers_[e].getMap() !== this.activeMap_ &&
        this.markers_[e].setMap(this.activeMap_);
    for (e = 0; e < this.clusters_.length; e++) this.clusters_[e].remove();
    for (this.clusters_ = [], e = 0; e < this.listeners_.length; e++)
      google.maps.event.removeListener(this.listeners_[e]);
    (this.listeners_ = []), (this.activeMap_ = null), (this.ready_ = !1);
  }),
  (O_MarkerClusterer.prototype.draw = function () {}),
  (O_MarkerClusterer.prototype.setupStyles_ = function () {
    var e, t;
    if (!(this.styles_.length > 0))
      for (e = 0; e < this.imageSizes_.length; e++)
        (t = this.imageSizes_[e]),
          this.styles_.push({
            url: this.imagePath_ + (e + 1) + "." + this.imageExtension_,
            height: t,
            width: t,
          });
  }),
  (O_MarkerClusterer.prototype.fitMapToMarkers = function () {
    var e,
      t = this.getMarkers(),
      n = new google.maps.LatLngBounds();
    for (e = 0; e < t.length; e++) n.extend(t[e].getPosition());
    this.getMap().fitBounds(n);
  }),
  (O_MarkerClusterer.prototype.getGridSize = function () {
    return this.gridSize_;
  }),
  (O_MarkerClusterer.prototype.setGridSize = function (e) {
    this.gridSize_ = e;
  }),
  (O_MarkerClusterer.prototype.getMinimumClusterSize = function () {
    return this.minClusterSize_;
  }),
  (O_MarkerClusterer.prototype.setMinimumClusterSize = function (e) {
    this.minClusterSize_ = e;
  }),
  (O_MarkerClusterer.prototype.getMaxZoom = function () {
    return this.maxZoom_;
  }),
  (O_MarkerClusterer.prototype.setMaxZoom = function (e) {
    this.maxZoom_ = e;
  }),
  (O_MarkerClusterer.prototype.getStyles = function () {
    return this.styles_;
  }),
  (O_MarkerClusterer.prototype.setStyles = function (e) {
    this.styles_ = e;
  }),
  (O_MarkerClusterer.prototype.getTitle = function () {
    return this.title_;
  }),
  (O_MarkerClusterer.prototype.setTitle = function (e) {
    this.title_ = e;
  }),
  (O_MarkerClusterer.prototype.getZoomOnClick = function () {
    return this.zoomOnClick_;
  }),
  (O_MarkerClusterer.prototype.setZoomOnClick = function (e) {
    this.zoomOnClick_ = e;
  }),
  (O_MarkerClusterer.prototype.getAverageCenter = function () {
    return this.averageCenter_;
  }),
  (O_MarkerClusterer.prototype.setAverageCenter = function (e) {
    this.averageCenter_ = e;
  }),
  (O_MarkerClusterer.prototype.getIgnoreHidden = function () {
    return this.ignoreHidden_;
  }),
  (O_MarkerClusterer.prototype.setIgnoreHidden = function (e) {
    this.ignoreHidden_ = e;
  }),
  (O_MarkerClusterer.prototype.getEnableRetinaIcons = function () {
    return this.enableRetinaIcons_;
  }),
  (O_MarkerClusterer.prototype.setEnableRetinaIcons = function (e) {
    this.enableRetinaIcons_ = e;
  }),
  (O_MarkerClusterer.prototype.getImageExtension = function () {
    return this.imageExtension_;
  }),
  (O_MarkerClusterer.prototype.setImageExtension = function (e) {
    this.imageExtension_ = e;
  }),
  (O_MarkerClusterer.prototype.getImagePath = function () {
    return this.imagePath_;
  }),
  (O_MarkerClusterer.prototype.setImagePath = function (e) {
    this.imagePath_ = e;
  }),
  (O_MarkerClusterer.prototype.getImageSizes = function () {
    return this.imageSizes_;
  }),
  (O_MarkerClusterer.prototype.setImageSizes = function (e) {
    this.imageSizes_ = e;
  }),
  (O_MarkerClusterer.prototype.getCalculator = function () {
    return this.calculator_;
  }),
  (O_MarkerClusterer.prototype.setCalculator = function (e) {
    this.calculator_ = e;
  }),
  (O_MarkerClusterer.prototype.getBatchSizeIE = function () {
    return this.batchSizeIE_;
  }),
  (O_MarkerClusterer.prototype.setBatchSizeIE = function (e) {
    this.batchSizeIE_ = e;
  }),
  (O_MarkerClusterer.prototype.getClusterClass = function () {
    return this.clusterClass_;
  }),
  (O_MarkerClusterer.prototype.setClusterClass = function (e) {
    this.clusterClass_ = e;
  }),
  (O_MarkerClusterer.prototype.getMarkers = function () {
    return this.markers_;
  }),
  (O_MarkerClusterer.prototype.getTotalMarkers = function () {
    return this.markers_.length;
  }),
  (O_MarkerClusterer.prototype.getClusters = function () {
    return this.clusters_;
  }),
  (O_MarkerClusterer.prototype.getTotalClusters = function () {
    return this.clusters_.length;
  }),
  (O_MarkerClusterer.prototype.addMarker = function (e, t) {
    this.pushMarkerTo_(e), t || this.redraw_();
  }),
  (O_MarkerClusterer.prototype.addMarkers = function (e, t) {
    var n;
    for (n in e) e.hasOwnProperty(n) && this.pushMarkerTo_(e[n]);
    t || this.redraw_();
  }),
  (O_MarkerClusterer.prototype.pushMarkerTo_ = function (e) {
    if (e.getDraggable()) {
      var t = this;
      google.maps.event.addListener(e, "dragend", function () {
        t.ready_ && ((this.isAdded = !1), t.repaint());
      });
    }
    (e.isAdded = !1), this.markers_.push(e);
  }),
  (O_MarkerClusterer.prototype.removeMarker = function (e, t) {
    var n = this.removeMarker_(e);
    return !t && n && this.repaint(), n;
  }),
  (O_MarkerClusterer.prototype.removeMarkers = function (e, t) {
    var n,
      o,
      i = !1;
    for (n = 0; n < e.length; n++) (o = this.removeMarker_(e[n])), (i = i || o);
    return !t && i && this.repaint(), i;
  }),
  (O_MarkerClusterer.prototype.removeMarker_ = function (e) {
    var t,
      n = -1;
    if (this.markers_.indexOf) n = this.markers_.indexOf(e);
    else
      for (t = 0; t < this.markers_.length; t++)
        if (e === this.markers_[t]) {
          n = t;
          break;
        }
    return -1 === n ? !1 : (e.setMap(null), this.markers_.splice(n, 1), !0);
  }),
  (O_MarkerClusterer.prototype.clearMarkers = function () {
    this.resetViewport_(!0), (this.markers_ = []);
  }),
  (O_MarkerClusterer.prototype.repaint = function () {
    var e = this.clusters_.slice();
    (this.clusters_ = []),
      this.resetViewport_(!1),
      this.redraw_(),
      setTimeout(function () {
        var t;
        for (t = 0; t < e.length; t++) e[t].remove();
      }, 0);
  }),
  (O_MarkerClusterer.prototype.getExtendedBounds = function (e) {
    var t = this.getProjection(),
      n = new google.maps.LatLng(
        e.getNorthEast().lat(),
        e.getNorthEast().lng(),
      ),
      o = new google.maps.LatLng(
        e.getSouthWest().lat(),
        e.getSouthWest().lng(),
      ),
      i = t.fromLatLngToDivPixel(n);
    (i.x += this.gridSize_), (i.y -= this.gridSize_);
    var r = t.fromLatLngToDivPixel(o);
    (r.x -= this.gridSize_), (r.y += this.gridSize_);
    var s = t.fromDivPixelToLatLng(i),
      a = t.fromDivPixelToLatLng(r);
    return e.extend(s), e.extend(a), e;
  }),
  (O_MarkerClusterer.prototype.redraw_ = function () {
    this.createClusters_(0);
  }),
  (O_MarkerClusterer.prototype.resetViewport_ = function (e) {
    var t, n;
    for (t = 0; t < this.clusters_.length; t++) this.clusters_[t].remove();
    for (this.clusters_ = [], t = 0; t < this.markers_.length; t++)
      (n = this.markers_[t]), (n.isAdded = !1), e && n.setMap(null);
  }),
  (O_MarkerClusterer.prototype.distanceBetweenPoints_ = function (e, t) {
    var n = 6371,
      o = ((t.lat() - e.lat()) * Math.PI) / 180,
      i = ((t.lng() - e.lng()) * Math.PI) / 180,
      r =
        Math.sin(o / 2) * Math.sin(o / 2) +
        Math.cos((e.lat() * Math.PI) / 180) *
          Math.cos((t.lat() * Math.PI) / 180) *
          Math.sin(i / 2) *
          Math.sin(i / 2),
      s = 2 * Math.atan2(Math.sqrt(r), Math.sqrt(1 - r)),
      a = n * s;
    return a;
  }),
  (O_MarkerClusterer.prototype.isMarkerInBounds_ = function (e, t) {
    return t.contains(e.getPosition());
  }),
  (O_MarkerClusterer.prototype.addToClosestCluster_ = function (e) {
    var t,
      n,
      o,
      i,
      r = 4e4,
      s = null;
    for (t = 0; t < this.clusters_.length; t++)
      (o = this.clusters_[t]),
        (i = o.getCenter()),
        i &&
          ((n = this.distanceBetweenPoints_(i, e.getPosition())),
          r > n && ((r = n), (s = o)));
    s && s.isMarkerInClusterBounds(e)
      ? s.addMarker(e)
      : ((o = new O_Cluster(this)), o.addMarker(e), this.clusters_.push(o));
  }),
  (O_MarkerClusterer.prototype.createClusters_ = function (e) {
    var t,
      n,
      o,
      i = this;
    if (this.ready_) {
      0 === e &&
        (google.maps.event.trigger(this, "clusteringbegin", this),
        "undefined" != typeof this.timerRefStatic &&
          (clearTimeout(this.timerRefStatic), delete this.timerRefStatic)),
        (o =
          this.getMap().getZoom() > 3
            ? new google.maps.LatLngBounds(
                this.getMap().getBounds().getSouthWest(),
                this.getMap().getBounds().getNorthEast(),
              )
            : new google.maps.LatLngBounds(
                new google.maps.LatLng(85.02070771743472, -178.48388434375),
                new google.maps.LatLng(-85.08136444384544, 178.00048865625),
              ));
      var r = this.getExtendedBounds(o),
        s = Math.min(e + this.batchSize_, this.markers_.length);
      for (t = e; s > t; t++)
        (n = this.markers_[t]),
          !n.isAdded &&
            this.isMarkerInBounds_(n, r) &&
            (!this.ignoreHidden_ || (this.ignoreHidden_ && n.getVisible())) &&
            this.addToClosestCluster_(n);
      s < this.markers_.length
        ? (this.timerRefStatic = setTimeout(function () {
            i.createClusters_(s);
          }, 0))
        : (delete this.timerRefStatic,
          google.maps.event.trigger(this, "clusteringend", this));
    }
  }),
  (O_MarkerClusterer.prototype.extend = function (e, t) {
    return function (e) {
      var t;
      for (t in e.prototype) this.prototype[t] = e.prototype[t];
      return this;
    }.apply(e, [t]);
  }),
  (O_MarkerClusterer.CALCULATOR = function (e, t) {
    for (var n = 0, o = "", i = e.length.toString(), r = i; 0 !== r; )
      (r = parseInt(r / 10, 10)), n++;
    return (n = Math.min(n, t)), { text: i, index: n, title: o };
  }),
  (O_MarkerClusterer.BATCH_SIZE = 2e3),
  (O_MarkerClusterer.BATCH_SIZE_IE = 500),
  (O_MarkerClusterer.IMAGE_PATH =
    "http://google-maps-utility-library-v3.googlecode.com/svn/trunk/markerclustererplus/images/m"),
  (O_MarkerClusterer.IMAGE_EXTENSION = "png"),
  (O_MarkerClusterer.IMAGE_SIZES = [53, 56, 66, 78, 90]),
  "function" != typeof String.prototype.trim &&
    (String.prototype.trim = function () {
      return this.replace(/^\s+|\s+$/g, "");
    });
